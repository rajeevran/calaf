{"version":3,"sources":["logo.svg","shared/baseUrl.js","actions/admin.js","components/header/Header.js","components/menu/Menu.js","components/footer/Footer.js","components/dashboard/Dashboard.js","components/login/LoginForm.js","shared/utils.js","components/admin/AdminForm.js","components/admin/Admin.js","components/admin/AdminList.js","components/users/UserForm.js","components/users/Thumb.js","components/users/User.js","components/users/UserList.js","actions/terms.js","components/terms/Term.js","components/terms/TermList.js","components/terms/TermForm.js","actions/privacy.js","components/privacy/Privacy.js","components/privacy/PrivacyList.js","components/privacy/PrivacyForm.js","components/admin/ChangePassword.js","App.js","serviceWorker.js","reducers/adminReducer.js","reducers/privacyReducer.js","reducers/termReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","baseUrl","postLoginOutAdmin","localStorage","setItem","JSON","stringify","token","isAuthenticated","name","id","profileImage","console","log","getItem","getToken","fetchAdmin","page","limit","searchName","dispatch","parse","type","headers","axios","get","params","adminId","then","res","payload","data","catch","err","response","postDeleteAdmin","postData","post","fetchUser","userId","postDeleteUser","Header","state","logout","onClickLogOut","e","setState","this","to","push","style","position","width","height","top","left","right","bottom","zIndex","cursor","display","className","aria-hidden","href","data-toggle","role","title","marginRight","pathname","onClick","Component","Menu","src","alt","float","activeStyle","background","color","paddingRight","Footer","Dashboard","withFormikData","withFormik","mapPropsToValues","values","email","password","validationSchema","yup","shape","required","handleSubmit","formikBag","props","postLoginAdmin","resetForm","authentication","login","message","success","component","touched","errors","placeholder","connect","adminReducer","usePrevious","value","ref","useRef","useEffect","current","list","isloading","isSuccess","postAddAdmin","formData","FormData","key","append","postEditAdmin","history","useHistory","prevIsSuccess","match","undefined","toast","setTimeout","goBack","warn","pathEditView","path","split","isAddMode","definedid","definedfirstName","definedlastName","definedemail","definedstatus","defineddeleteId","definedprofileImage","definedimageSavedUrl","docs","length","map","_id","firstName","lastName","status","valdationShape","addEditFields","deleteId","imagePreviewUrl","Yup","concat","min","confirmPassword","when","schema","oneOf","imageSavedUrl","initialValues","onSubmit","fields","minHeight","Row","Col","xs","md","size","offset","fullPage","loading","isSubmitting","setFieldValue","data-original-title","FormGroup","row","lg","accept","onChange","preventDefault","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","as","data-dismiss","document","getElementById","click","onDeleteAdmin","data-target","handlePageSearch","textAlign","STATUSCODE","activePage","itemsCountPerPage","totalItemsCount","total","pageRangeDisplayed","pageNumber","React","userList","ismailsend","sendmailmessage","postSendEmail","postAddUser","postEditUser","useState","definedfullName","definedphoneNumber","definedlocation","definedage","definedcountry","definedcity","defineddob","definedgender","definedselfieImage","definedselfieImageSavedUrl","definedadminresponse","dob","setCounter","photoIndex","isOpenProfileImage","openProfile","setOpenProfile","selfieIndex","isOpenSelfie","openSelfie","setOpenSelfie","profile","profileArray","selfieprofile","fullName","adminresponse","phoneNumber","location","age","gender","country","city","selfieImage","sort","a","b","isMain","profImg","media","Date","selfieImagePreviewUrl","selfieImageSavedUrl","handleChange","max","selected","dt","dateFormat","isClearable","showYearDropdown","scrollableYearDropdown","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","fullname","onDeleteUser","fetchTerm","fetchTermRequest","termId","fetchTermSuccess","fetchTermFailure","users","dangerouslySetInnerHTML","__html","description","termReducer","termlist","postEditTerm","lastIndex","window","lastIndexOf","substring","defineddescription","postAddTerm","Label","for","editor","ClassicEditor","disabled","onInit","event","getData","onBlur","onFocus","fetchPrivacy","privacyId","privacyReducer","privacylist","postEditPrivacy","postAddPrivacy","changepassword","postChangePasswordAdmin","newPassword","Container","fluid","marginLeft","SecuredPath","render","App","urlPath","exact","AdminForm","UserForm","Boolean","hostname","initialState","error","sendEmail","combineReducers","action","createStore","rootReducer","applyMiddleware","thunk","AppWithProvider","store","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.041b45c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","//export const baseUrl = \"http://localhost:3193/\";\nexport const baseUrl = \"https://nodeserver.mydevfactory.com:3192/\";\n//export const localUrl = \"http://localhost:3190/\";\nexport const localUrl = \"https://nodeserver.mydevfactory.com:3192/\";","import axios from 'axios'\r\nimport { type } from 'os';\r\nimport { baseUrl, localUrl } from '../shared/baseUrl'\r\n\r\nexport const POST_ADMIN_LOGIN_START = 'POST_ADMIN_LOGIN_START'\r\nexport const POST_ADMIN_LOGIN_SUCCESS = 'POST_ADMIN_LOGIN_SUCCESS'\r\nexport const POST_ADMIN_LOGIN_FAILURE = 'POST_ADMIN_LOGIN_FAILURE'\r\n\r\nexport const POST_ADMIN_LOGINOUT_SUCCESS = 'POST_ADMIN_LOGINOUT_SUCCESS'\r\n\r\nexport const FETCH_ADMIN_LIST_START = 'FETCH_ADMIN_LIST_START'\r\nexport const FETCH_ADMIN_LIST_SUCCESS = 'FETCH_ADMIN_LIST_SUCCESS'\r\nexport const FETCH_ADMIN_LIST_FAILURE = 'FETCH_ADMIN_LIST_FAILURE'\r\n\r\nexport const POST_ADMIN_ADD_START = 'POST_ADMIN_ADD_START'\r\nexport const POST_ADMIN_ADD_SUCCESS = 'POST_ADMIN_ADD_SUCCESS'\r\nexport const POST_ADMIN_ADD_FAILURE = 'POST_ADMIN_ADD_FAILURE'\r\n\r\nexport const POST_ADMIN_EDIT_START = 'POST_ADMIN_EDIT_START'\r\nexport const POST_ADMIN_EDIT_SUCCESS = 'POST_ADMIN_EDIT_SUCCESS'\r\nexport const POST_ADMIN_EDIT_FAILURE = 'POST_ADMIN_EDIT_FAILURE'\r\n\r\nexport const POST_SEND_EMAIL_START = 'POST_SEND_EMAIL_START'\r\nexport const POST_SEND_EMAIL_SUCCESS = 'POST_SEND_EMAIL_SUCCESS'\r\nexport const POST_SEND_EMAIL_FAILURE = 'POST_SEND_EMAIL_FAILURE'\r\n\r\n\r\nexport const POST_ADMIN_DELETE_START = 'POST_ADMIN_DELETE_START'\r\nexport const POST_ADMIN_DELETE_SUCCESS = 'POST_ADMIN_DELETE_SUCCESS'\r\nexport const POST_ADMIN_DELETE_FAILURE = 'POST_ADMIN_DELETE_FAILURE'\r\n\r\nexport const POST_ADMIN_CHANGEPASSWORD_START = 'POST_ADMIN_CHANGEPASSWORD_START'\r\nexport const POST_ADMIN_CHANGEPASSWORD_SUCCESS = 'POST_ADMIN_CHANGEPASSWORD_SUCCESS'\r\nexport const POST_ADMIN_CHANGEPASSWORD_FAILURE = 'POST_ADMIN_CHANGEPASSWORD_FAILURE'\r\n\r\nexport const FETCH_USER_LIST_START = 'FETCH_USER_LIST_START'\r\nexport const FETCH_USER_LIST_SUCCESS = 'FETCH_USER_LIST_SUCCESS'\r\nexport const FETCH_USER_LIST_FAILURE = 'FETCH_USER_LIST_FAILURE'\r\n\r\nexport const POST_USER_ADD_START = 'POST_USER_ADD_START'\r\nexport const POST_USER_ADD_SUCCESS = 'POST_USER_ADD_SUCCESS'\r\nexport const POST_USER_ADD_FAILURE = 'POST_USER_ADD_FAILURE'\r\n\r\nexport const POST_USER_EDIT_START = 'POST_USER_EDIT_START'\r\nexport const POST_USER_EDIT_SUCCESS = 'POST_USER_EDIT_SUCCESS'\r\nexport const POST_USER_EDIT_FAILURE = 'POST_USER_EDIT_FAILURE'\r\n\r\nexport const POST_USER_DELETE_START = 'POST_USER_DELETE_START'\r\nexport const POST_USER_DELETE_SUCCESS = 'POST_USER_DELETE_SUCCESS'\r\nexport const POST_USER_DELETE_FAILURE = 'POST_USER_DELETE_FAILURE'\r\n\r\n//...................LOGIN ...............................\r\n\r\nexport const postLoginAdmin = (data) => dispatch =>{\r\n\r\n        console.log('post data--->', data);\r\n       // console.log('post auth data--->', JSON.parse(getToken()).isAuthenticated);\r\n        \r\n        dispatch( {type:'POST_ADMIN_LOGIN_START'} )\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n        }\r\n\r\n        axios\r\n        .post(baseUrl+'admin/adminLogin/', data,  {\r\n            headers: headers\r\n            })\r\n        .then(res =>{\r\n\r\n            console.log('res---->',res)\r\n            let token = '';\r\n            let name = '';\r\n            let id = '';\r\n            let profileImage = '';\r\n            let isAuthenticated = false;\r\n\r\n            if(res.data.success)\r\n            {\r\n                 token = res.data.response.token;\r\n                 name = res.data.response.name;\r\n                 id = res.data.response.id;\r\n                 profileImage = res.data.response.profileImage;\r\n                 isAuthenticated = true;\r\n            }\r\n            \r\n            localStorage.setItem('auth',JSON.stringify(\r\n                {\r\n                    token:token, \r\n                    isAuthenticated: isAuthenticated,\r\n                    id:id, \r\n                    name:name, \r\n                    profileImage:profileImage \r\n\r\n                }\r\n                ));\r\n\r\n            dispatch( { type:'POST_ADMIN_LOGIN_SUCCESS', payload: res.data } )\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            dispatch( { type:'POST_ADMIN_LOGIN_FAILURE', payload: err.response  } )\r\n            \r\n        })\r\n}\r\n\r\nexport const postLoginOutAdmin = () =>{\r\n\r\n\r\n        let token = '';\r\n        let id = '';\r\n        let name = '';\r\n        let profileImage = '';\r\n        let isAuthenticated = false;\r\n        localStorage.setItem('auth',JSON.stringify({\r\n            token:token, \r\n            isAuthenticated: isAuthenticated,\r\n            name:name, \r\n            id:id, \r\n            profileImage:profileImage \r\n        }));\r\n        console.log('Logout data--->',localStorage.getItem('auth'));\r\n    \r\n}\r\n\r\nexport const getToken = () =>{\r\n\r\n    let token = localStorage.getItem('auth');\r\n    //console.log('token-----',token);\r\n    \r\n    return token\r\n}\r\n\r\n//...................ADMIN ...............................\r\nexport const fetchAdmin = (id,page,limit,searchName) => dispatch =>{\r\n\r\n        console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n        //let token = 'eyJhbciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhamVldjVAZ21haWwuY29tIiwiYWRtaW5JZCI6IjVlZWEwMjU2NjlkNTgxNGU0NTBiMGFjZiIsImlhdCI6MTU5MzY3NDgxNCwiZXhwIjoxNTkzNzE4MDE0fQ.10TvFMH9Loo1vxaouYSd_wVnrU7LGQpJZ1wTk3ANVfI'\r\n        let token = JSON.parse(getToken()).token\r\n\r\n        dispatch( {type:'FETCH_ADMIN_LIST_START'} )\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': token\r\n          }\r\n\r\n        axios\r\n        .get(baseUrl+'admin/listAdmin/', {\r\n            headers: headers,\r\n            params:{\r\n                ...(id ? { adminId: id } : {}),\r\n                ...(searchName ? { searchName: searchName } : {}),\r\n                ...(page ? { page: page } : {}),\r\n                ...(limit ? { limit: limit } : {})\r\n            }\r\n            })\r\n        .then(res =>{\r\n            console.log(res)\r\n            dispatch( { type:'FETCH_ADMIN_LIST_SUCCESS', payload: res.data } )\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            dispatch( { type:'FETCH_ADMIN_LIST_FAILURE', payload: err.response  } )\r\n            \r\n        })\r\n}\r\n\r\nexport const postAddAdmin = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_ADMIN_ADD_START'} )\r\n\r\n    console.log('Post add data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n    formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/addAdmin/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_ADMIN_ADD_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_ADMIN_ADD_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postEditAdmin = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_ADMIN_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n      formData.append(key, postData[key]);\r\n    }\r\n   // formData.append('profileImage', updateFile);\r\n   // const headers = new Headers({ 'Accept': 'application/json' });\r\n\r\n    axios\r\n    .post(baseUrl+'admin/editAdmin/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_ADMIN_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_ADMIN_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postChangePasswordAdmin = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_ADMIN_CHANGEPASSWORD_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n      postData.token = token\r\n      \r\n    axios\r\n    .post(baseUrl+'admin/changePassword/',postData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_ADMIN_CHANGEPASSWORD_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_ADMIN_CHANGEPASSWORD_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postDeleteAdmin = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_ADMIN_DELETE_START'} )\r\n\r\n    console.log('Post delete data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/deleteAdmin/',postData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_ADMIN_DELETE_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_ADMIN_DELETE_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\n\r\n//...................USER ...............................\r\nexport const fetchUser = (id,page,limit,searchName) => dispatch =>{\r\n\r\n    console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    dispatch( {type:'FETCH_USER_LIST_START'} )\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n      \r\n    axios\r\n    .get(baseUrl+'admin/listUser/', {\r\n        headers: headers,\r\n        params:{\r\n            ...(id ? { userId: id } : {}),\r\n            ...(searchName ? { searchName: searchName } : {}),\r\n            ...(page ? { page: page } : {}),\r\n            ...(limit ? { limit: limit } : {})\r\n        }\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'FETCH_USER_LIST_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'FETCH_USER_LIST_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postAddUser = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_USER_ADD_START'} )\r\n\r\n    console.log('post add user data--->', JSON.parse(getToken()).token);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n    formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/addUser/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log('addUser--->',res)\r\n        dispatch( { type:'POST_USER_ADD_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_USER_ADD_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postEditUser = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_USER_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n      formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/editUser/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_USER_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_USER_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\n\r\nexport const postSendEmail = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_SEND_EMAIL_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    // const formData = new FormData();\r\n    // for (const key in postData) {\r\n    //   formData.append(key, postData[key]);\r\n    // }\r\n\r\n    axios\r\n    .post(baseUrl+'admin/sendEmail/',postData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_SEND_EMAIL_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_SEND_EMAIL_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\nexport const postDeleteUser = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_USER_DELETE_START'} )\r\n\r\n    console.log('Post delete data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    axios\r\n    .post(baseUrl+'api/deleteUser/',postData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_USER_DELETE_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_USER_DELETE_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}","\r\nimport React, { Component, Fragment } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { postLoginOutAdmin, getToken } from '../../actions/admin'\r\nimport { Redirect, Link, withRouter } from 'react-router-dom'\r\nclass Header extends Component \r\n{\r\n\r\n    state= {\r\n        logout:false\r\n    }\r\n\r\n    onClickLogOut = (e) => {\r\n\r\n        postLoginOutAdmin()\r\n        this.setState({logout:true})\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        //console.log('getToken',getToken())\r\n\r\n        const { logout } = this.state\r\n        const { name, profileImage,id } = JSON.parse(getToken())\r\n\r\n        if(logout) \r\n        {\r\n            console.log('logout enter--------');\r\n \r\n            return (<Redirect to=\"/login\" push={true}  />)\r\n        }\r\n        return (\r\n\r\n                 <Fragment>\r\n                        <div id=\"overlay\" style={{ position: 'fixed' , width: '100%', height: '100%', top: 0, left: 0, right: 0, bottom: 0, \r\n                        'backgroundColor': 'rgba(0,0,0,0.5)', zIndex: 2, cursor: 'pointer',  display: 'none'  }}>\r\n                        <i className=\"fa fa-spinner fa-4x\" aria-hidden=\"true\" style={{'marginLeft': '48%', 'marginTop': '20%'}}></i>\r\n                        </div>\r\n            \r\n                        <header className=\"main-header\" >\r\n                            <a  className=\"logo\">\r\n                            \r\n                            <span className=\"logo-mini\">Calaf</span>\r\n                            \r\n                            <span className=\"logo-lg\"><b>Calaf</b> Admin</span>\r\n                        </a>\r\n                        \r\n                        <nav className=\"navbar navbar-static-top\">\r\n                            \r\n                            <a href=\"javascript:;\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" role=\"button\">\r\n                                <span className=\"sr-only\">Toggle navigation</span>\r\n                                <span className=\"icon-bar\"></span>\r\n                                <span className=\"icon-bar\"></span>\r\n                                <span className=\"icon-bar\"></span>\r\n                            </a>\r\n            \r\n                            <div className=\"navbar-custom-menu\">\r\n                                <ul className=\"nav navbar-nav\">\r\n                                    <li className=\"dropdown user user-menu\">\r\n                                        <a className=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                                            <span className=\"hidden-xs\" style={{\"cursor\": \"pointer\"}}>Welcome {name}</span>\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu\">\r\n                                            <li className=\"user-footer\">\r\n                                               \r\n                                                <div className=\"pull-right\">\r\n                                                    <Link className=\"btn btn-default btn-flat\" title=\"View\" style={{marginRight:'30px'}} to= {{ pathname: `/admin/view/${id}` }}  >\r\n                                                        <i className=\"fa fa-eye\">View Profile</i>\r\n                                                    </Link>\r\n                                                    <a className=\"btn btn-default btn-flat\"  style={{marginRight:'10px'}} onClick={ this.onClickLogOut}  >\r\n                                                    <i className=\"fa fa-sign-out\">Sign out</i>\r\n                                                    </a>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </header>\r\n                </Fragment>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nexport default Header","\r\nimport React, { Component } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport {  getToken } from '../../actions/admin'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\n\r\nclass Menu extends Component \r\n{\r\n\r\n    render(){\r\n        const { name, profileImage } = JSON.parse(getToken())\r\n\r\n        return (\r\n                    <aside className=\"main-sidebar\">\r\n                    <div className=\"sidebar\" >\r\n        \r\n                        <div className=\"user-panel\">\r\n        \r\n                            <div className=\"pull-left image\">\r\n                                <img src={baseUrl+profileImage} className=\"img-circle\" alt=\"Admin Image\" style={{height : '50px'}} />\r\n                            </div>\r\n        \r\n                            <div className=\"pull-left info\">\r\n                                <p>{name}</p>\r\n                                \r\n                            </div>\r\n                        </div>\r\n        \r\n        \r\n                        <ul className=\"sidebar-menu\"  style= {{ float:\"left\"}}>\r\n                                            \r\n                            <li className=\"treeview\">\r\n                            <NavLink\r\n                                        to=\"/admin\"\r\n                                        activeStyle={{\r\n                                        background:'black',\r\n                                        color:'white'\r\n                                        }} \r\n                                        style={{paddingRight:\"43px\"}}\r\n                                        >\r\n                                   \r\n                                        <i className=\"fa fa-cubes\"></i> <span>Admin Management</span>\r\n                                        <span className=\"pull-right-container\">\r\n                                        </span>\r\n                                  \r\n                            </NavLink>                                    \r\n                            </li> \r\n                            \r\n                            <li className=\"treeview\">\r\n                            <NavLink\r\n                                        to=\"/user\"\r\n                                        activeStyle={{\r\n                                        background:'black',\r\n                                        color:'white'\r\n                                        }}  \r\n                                        style={{paddingRight:\"65px\"}}\r\n                                        >\r\n                                   \r\n                                        <i className=\"fa fa-user-plus\"></i> <span>User Management </span>\r\n                                        <span className=\"pull-right-container\">\r\n                                        </span>\r\n                                  \r\n                            </NavLink>    \r\n                            </li>                                               \r\n        \r\n\r\n                            <li className=\"treeview\">\r\n                                <NavLink\r\n                                            to=\"/term/\"\r\n                                            activeStyle={{\r\n                                            background:'black',\r\n                                            color:'white'\r\n                                            }}  \r\n                                            style={{paddingRight:\"62px\"}}\r\n                                            >\r\n                                    \r\n                                            <i className=\"fa fa-exclamation-circle\"></i> <span>Term Management </span>\r\n                                            <span className=\"pull-right-container\">\r\n                                            </span>\r\n                                    \r\n                                </NavLink>    \r\n                            </li>  \r\n                                                                \r\n                            <li className=\"treeview\">\r\n                                <NavLink\r\n                                            to=\"/privacy/\"\r\n                                            activeStyle={{\r\n                                            background:'black',\r\n                                            color:'white'\r\n                                            }}  \r\n                                            style={{paddingRight:\"50px\"}}\r\n                                            >\r\n                                    \r\n                                            <i className=\"fa fa-exclamation-triangle\"></i> <span>Privacy Management </span>\r\n                                            <span className=\"pull-right-container\">\r\n                                            </span>\r\n                                    \r\n                                </NavLink>    \r\n                            </li> \r\n                        </ul>\r\n                        </div>\r\n                    </aside>\r\n            )\r\n        }\r\n}\r\n\r\nexport default Menu","\r\nimport React, { Component } from 'react'\r\nimport { runInThisContext } from 'vm';\r\n\r\nclass Footer extends Component \r\n{\r\n\r\n    render(){\r\n\r\n        return (\r\n                <footer className=\"main-footer\" >\r\n                    <div className=\"pull-right hidden-xs\">\r\n                        <b>Version</b> 0.0.1\r\n                    </div>\r\n                    <strong>Powered by &copy; 2020 <a href=\"http://www.brainiuminfotech.com/\">Brainium Information Technologies\r\n                            Pvt. Ltd.</a></strong> All rights reserved.\r\n                </footer>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nexport default Footer","\r\nimport React, { Component, Fragment } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport Header from '../../components/header/Header'\r\nimport Menu from '../../components/menu/Menu'\r\nimport Footer from '../../components/footer/Footer'\r\nclass Dashboard extends Component \r\n{\r\n\r\n    render(){\r\n\r\n        return (\r\n                <Fragment>\r\n                                <Header />\r\n                                <Menu />\r\n                                <div className=\"login-logo\" style={ {'marginBottom': '370px',\r\n                                                                    'marginTop': '133px'}}>\r\n                                    <p>\r\n                                        <b>Welcome To Calaf</b> Admin\r\n                                   </p>\r\n                                </div>\r\n                           \r\n                </Fragment>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nexport default Dashboard","     \r\n\r\n\r\nimport React, { Component, useEffect } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { Switch, Route, Redirect, withRouter  } from 'react-router-dom';\r\nimport { withFormik, Form, Field } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { postLoginAdmin, getToken } from '../../actions/admin'\r\nimport Dashboard from '../../components/dashboard/Dashboard'\r\n\r\nimport { connect } from 'react-redux';\r\n       \r\n\r\n\r\n       const LoginForm = (props) => { \r\n           \r\n        const authentication ={\r\n            isAuthenticated : getToken() !== null ? JSON.parse(getToken()).isAuthenticated: false\r\n        }\r\n        \r\n        console.log('props login---->',props);\r\n        console.log('props authentication---->',JSON.parse(getToken()));\r\n\r\n           return (\r\n\r\n                <div className=\"login-box\">\r\n                <div className=\"login-logo\">\r\n                    <b>Calaf</b> Admin\r\n                </div>\r\n                <div className=\"login-box-body\">\r\n                    <p className=\"login-box-msg\">Sign in to start your session</p>\r\n                    \r\n                    { authentication.isAuthenticated === false && <p> {props.login.message} </p> }\r\n                    { props.login.success === true &&  JSON.parse(getToken()).isAuthenticated === true && \r\n                        <Redirect to=\"/dashboard\"  component={() => { return <Dashboard />}} />\r\n                    }\r\n                    <Form >\r\n                        <div className=\"form-group has-feedback\">\r\n                            {props.touched.email && props.errors.email && <p>{props.errors.email}</p>}\r\n                            <label>Email:</label>\r\n                            <Field type=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group has-feedback\">\r\n                        {props.touched.password && props.errors.password && <p>{props.errors.password}</p>}\r\n                            <label>Password:</label>\r\n                            <Field type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\" >Login</button>\r\n                    </Form>\r\n\r\n                    </div>\r\n                </div>     \r\n           )\r\n       }\r\n       \r\n       const withFormikData =  withFormik({\r\n           mapPropsToValues: (values) => {\r\n               return {\r\n                   email: values.email || '',\r\n                   password: values.password || ''\r\n\r\n               }\r\n           },\r\n           validationSchema: yup.object().shape({\r\n               email:yup.string().required('please provide email'),\r\n               password:yup.string().required('please provide password')\r\n           }),\r\n           handleSubmit:( (values, formikBag ) => {\r\n               formikBag.props.postLoginAdmin(values)\r\n               formikBag.resetForm()\r\n           })\r\n         })(LoginForm)\r\n\r\n       const mapStateToProps = ({adminReducer}) => ({\r\n\r\n        login:adminReducer.login\r\n        })\r\n       \r\n       export default connect(mapStateToProps, {postLoginAdmin})(withFormikData)\r\n       \r\n\r\n","import React, { useEffect,  useRef } from 'react'\r\n\r\nexport const usePrevious = (value) => {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    }, [value]); \r\n    return ref.current;\r\n};\r\n","\r\nimport React, { Component, Fragment, useEffect, useState, useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\nimport { postAddAdmin, fetchAdmin, postEditAdmin, postDeleteAdmin } from '../../actions/admin'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\n \r\nimport 'react-overlay-loader/styles.css';\r\nimport {usePrevious} from '../../shared/utils'\r\n\r\n\r\nconst AdminForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   const prevIsSuccess = usePrevious(props.isSuccess);\r\n \r\n    useEffect( ()=>(\r\n        props.fetchAdmin(props.match.params.id)\r\n    ), [])\r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted------->',props.isSuccess);\r\n        console.log('prevIsSuccess ---->',prevIsSuccess);\r\n\r\n        if(prevIsSuccess !== undefined && prevIsSuccess === false)\r\n        {\r\n            if(props.isSuccess === true)\r\n            {\r\n\r\n                toast.success(props.message)\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n            }else if(props.isSuccess === false){\r\n\r\n                toast.warn(props.message)\r\n\r\n            }\r\n        }\r\n\r\n    }, [prevIsSuccess, props.message])\r\n\r\n    console.log('props values--->',props);\r\n\r\n\r\n    const { id } = props.match.params;\r\n    let { path } = props.match;\r\n\r\n    let pathEditView = path.split('/')[2]\r\n    const isAddMode = !id;\r\n    let definedid = ''\r\n    let definedfirstName = ''\r\n    let definedlastName = ''\r\n    let definedemail = ''\r\n    let definedstatus = ''\r\n    let defineddeleteId = ''\r\n    let definedprofileImage = ''\r\n    let definedimageSavedUrl =''\r\n    //deleteId\r\n    if(!isAddMode && props.list.response.docs.length == 1)\r\n    {\r\n        \r\n        props.list.response.docs.map((response) => \r\n        {\r\n            defineddeleteId         = pathEditView == 'delete' ? response._id: ''\r\n            definedid               = response._id\r\n            definedfirstName        = response.firstName\r\n            definedlastName         = response.lastName\r\n            definedemail            = response.email\r\n            definedprofileImage     = response.profileImage\r\n            definedimageSavedUrl    = baseUrl+response.profileImage\r\n            definedstatus           = response.status\r\n        })\r\n    }\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            firstName: definedfirstName,\r\n            lastName: definedlastName,\r\n            email: definedemail,\r\n            profileImage:definedprofileImage,\r\n            status: 'yes',\r\n            password: '',\r\n            imagePreviewUrl:''\r\n        }\r\n\r\n        valdationShape= {\r\n            firstName: Yup.string()\r\n                .required('First Name is required'),\r\n            lastName: Yup.string()\r\n                .required('Last Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required'),\r\n            password: Yup.string()\r\n                .concat(isAddMode ? Yup.string().required('Password is required') : null)\r\n                .min(6, 'Password must be at least 6 characters'),\r\n            confirmPassword: Yup.string()\r\n                .when('password', (password, schema) => {\r\n                    if (password || isAddMode) return schema.required('Confirm Password is required');\r\n                })\r\n                .oneOf([Yup.ref('password')], 'Passwords must match')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            adminId: definedid,\r\n            firstName: definedfirstName,\r\n            lastName: definedlastName,\r\n            profileImage:definedprofileImage,\r\n            imageSavedUrl:definedimageSavedUrl,\r\n            email: definedemail,\r\n            status: definedstatus,\r\n            imagePreviewUrl:''\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            firstName: Yup.string()\r\n                .required('First Name is required'),\r\n            lastName: Yup.string()\r\n                .required('Last Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required'),\r\n            password: Yup.string()\r\n                .min(6, 'Password must be at least 6 characters'),\r\n            confirmPassword: Yup.string()\r\n                .when('password', (password, schema) => {\r\n                    if (password || isAddMode) return schema.required('Confirm Password is required');\r\n                })\r\n                .oneOf([Yup.ref('password')], 'Password must match')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n            //toast.success(\"Admin Added Successfully.\")\r\n\r\n            props.postAddAdmin(fields)\r\n\r\n        } else {\r\n            //toast.success(\"Admin Data Updated Successfully.\")\r\n           // console.log('updated field value',fields);\r\n\r\n            props.postEditAdmin(fields)\r\n\r\n        }\r\n\r\n        // setTimeout( ()=>{\r\n\r\n        //     history.goBack() \r\n\r\n        // },2500)\r\n    }\r\n\r\n    function onDeleteAdmin(id){\r\n        console.log('id---',id);\r\n        props.postDeleteAdmin({adminId:id})\r\n        toast.success(\"Admin Data Deleted Successfully.\")\r\n\r\n        setTimeout( ()=>{\r\n\r\n            document.getElementById('close-delete-button-model').click() ;\r\n\r\n        },2500)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <ToastContainer />\r\n            <Header />\r\n            <Menu />\r\n            <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                 <Row>\r\n                <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n                {props.isloading &&\r\n\r\n                    <Loader fullPage loading />\r\n                }\r\n\r\n                {/*   THIS PART FOR EDIT  START   */}\r\n\r\n                { pathEditView == 'edit' && props.list.success !== false && props.list.response.docs.length == 1  && \r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                    {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                    return (\r\n                        <Form>\r\n\r\n                            <h1>{isAddMode ? 'Add Admin' : 'Edit Admin'}</h1>\r\n\r\n                            <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-cubes\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n\r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>First Name</label>\r\n                                                <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Last Name</label>\r\n                                                <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Email</label>\r\n                                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                            e.preventDefault();\r\n                    \r\n                                                            let reader = new FileReader();\r\n                                                            let file = e.target.files[0];\r\n                                                        \r\n                                                            reader.onloadend = () => {\r\n                                                                console.log('reader.result---',reader.result);\r\n                                                                \r\n                                                                setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                                setFieldValue(`profileImage`, file)\r\n                                                                \r\n                                                            }\r\n                                                        \r\n                                                            reader.readAsDataURL(file)\r\n                    \r\n                    \r\n                                                    }} />\r\n                        \r\n                                                <img src={values.imageSavedUrl}  style={{height:'150px', width:'150px', marginRight:'30px'}} /> \r\n                    \r\n                                                {\r\n                                                    values.imagePreviewUrl && \r\n                                                    \r\n                                                    <img src={values.imagePreviewUrl}  name=\"imagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n                                                    \r\n                                                } \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n                                <Row>\r\n\r\n                                    <Col lg={4}>\r\n                                    <FormGroup>\r\n                                        <label>Status</label>\r\n                                       \r\n                                            <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                    <option value=\"true\">Active</option>\r\n                                                    <option value=\"false\">DeActive</option>\r\n                                            </Field>\r\n\r\n                                            <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                \r\n                                </Row>\r\n\r\n\r\n                                <Row>\r\n                                    <p className=\"btn btn-warning pull-left\"> Leave the password blank if you don't want to change the password</p>\r\n                                </Row>\r\n                                <Row>\r\n                                        <Col lg={6}>\r\n                                        <FormGroup>\r\n                                            <label>Password</label>\r\n\r\n                                                <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                                            \r\n                                                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={6}>\r\n                                        <FormGroup>\r\n                                            <label>Confirm Password</label>\r\n                                        \r\n                                                    <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\r\n                                                \r\n                                                    <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                </Row>\r\n\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n                        </Form>\r\n                    );\r\n                    }}\r\n                </Formik>\r\n                \r\n                }\r\n\r\n                {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {/*   THIS PART FOR VIEW  START   */}\r\n\r\n                { pathEditView == 'view' && props.list.success !== false && props.list.response.docs.length == 1  && \r\n                <Formik initialValues={initialValues}>\r\n                    {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n                    values.status = (values.status === 'yes' || values.status == 'Active') ? 'Active' : 'DeActive'\r\n\r\n                    return (\r\n                        <Form>\r\n\r\n                            <h1>{isAddMode ? 'Add Admin' : 'View Admin'}</h1>\r\n\r\n                            <Row>\r\n                            <Col md={12}>\r\n                            \r\n                                <div className=\"portlet box blue\">\r\n                                    <div className=\"portlet-title\">\r\n                                    <div className=\"caption\">\r\n                                        <i className=\"fa fa-cubes\"></i>\r\n                                    </div>\r\n                                    <div className=\"tools\">\r\n                                        <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                        <div className=\"form-body\">\r\n                                            \r\n                                        <FormGroup row>\r\n                                        <Col md={12}>\r\n\r\n                                            <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                           \r\n                                        </Col>\r\n                                        </FormGroup>\r\n                                        \r\n                                        <Row>\r\n                                            <Col lg={4}>\r\n                                                <FormGroup>\r\n                                                    <label>First Name</label>\r\n                                                    <span name=\"firstName\"  className='form-control  no-border'>\r\n                                                        {values.firstName}\r\n                                                    </span>\r\n                                                                                               \r\n                                                </FormGroup>\r\n                                            \r\n                                            </Col>\r\n                                            \r\n                                            <Col lg={4}>\r\n                                                <FormGroup>\r\n                                                    <label>Last Name</label>\r\n                                                    <span name=\"lastName\"  className='form-control  no-border'>\r\n                                                        {values.lastName}\r\n                                                    </span>\r\n                                                                                               \r\n                                                </FormGroup>\r\n                                            \r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Email</label>\r\n                                                <span name=\"email\"  className='form-control  no-border'>\r\n                                                        {values.email}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                        </Row>\r\n\r\n                                        <FormGroup>\r\n                                            <label>Profile Image</label>\r\n                                            <div className=\"photo-upload\">                   \r\n                                            \r\n                                                    {\r\n                                                        values.imageSavedUrl && \r\n                                                        <img src={values.imageSavedUrl}  \r\n                                                        style={{height:'150px', width:'150px', marginRight:'30px'}}\r\n                                                        />                            \r\n                                                    }\r\n                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        \r\n                                    <Row>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Status</label>\r\n                                                <span name=\"status\"  className='form-control  no-border'>\r\n                                                        {values.status}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                    \r\n                                    </Row>\r\n\r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n\r\n                                </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n            \r\n                            \r\n                        </Form>\r\n                    );\r\n                    }}\r\n                </Formik>\r\n                }\r\n\r\n                {/*   THIS PART FOR VIEW  END   */}\r\n\r\n\r\n\r\n\r\n\r\n                {/*   THIS PART FOR ADD  START   */}\r\n\r\n                { isAddMode  && \r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                    return (\r\n                        <Form>\r\n\r\n                            <h1>{isAddMode ? 'Add Admin' : 'Edit Admin'}</h1>\r\n                            <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-cubes\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>First Name</label>\r\n                                                <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Last Name</label>\r\n                                                <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Email</label>\r\n                                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                    </Row>\r\n\r\n                                    <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                        // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                                        e.preventDefault();\r\n\r\n                                                        let reader = new FileReader();\r\n                                                        let file = e.target.files[0];\r\n                                                    \r\n                                                        reader.onloadend = () => {\r\n                                                            console.log('reader.result---',reader.result);\r\n                                                            \r\n                                                            setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                            setFieldValue(`profileImage`, file)\r\n                                                            // this.setState({\r\n                                                            // file: file,\r\n                                                            // imagePreviewUrl: reader.result\r\n                                                            // });\r\n                                                        }\r\n                                                    \r\n                                                        reader.readAsDataURL(file)\r\n\r\n\r\n                                                }} />\r\n\r\n                                                {\r\n                                                    values.imagePreviewUrl && \r\n                                                    \r\n                                                    <img src={values.imagePreviewUrl}  name=\"imagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n                                                    \r\n                                                } \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n                                <Row>\r\n\r\n                                    <Col lg={4}>\r\n                                    <FormGroup>\r\n                                        <label>Status</label>\r\n                                       \r\n                                            <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                    <option value=\"true\">Active</option>\r\n                                                    <option value=\"false\">DeActive</option>\r\n                                            </Field>\r\n\r\n                                            <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                \r\n                                </Row>\r\n\r\n                                <Row>\r\n\r\n                                    <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Password</label>\r\n\r\n                                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                                        \r\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n\r\n                                     <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Confirm Password</label>\r\n                                       \r\n                                                <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\r\n                                            \r\n                                                <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n                    \r\n                            \r\n                        </Form>\r\n                    );\r\n                    }}\r\n                </Formik>\r\n                }\r\n                {/*   THIS PART FOR ADD  END   */}\r\n\r\n\r\n\r\n\r\n                {/*   THIS PART FOR DELETE  START   */}\r\n\r\n                { pathEditView == 'delete' && props.list.success !== false && props.list.response.docs.length == 1  && \r\n            \r\n                <div className=\"modal show\" id=\"modal-form-delete\">\r\n                                <input type=\"hidden\" name=\"deleteId\" ></input>\r\n\r\n                                <div className=\"modal-dialog\">\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modal-header\">\r\n                                        <Link to={'/admin'}>\r\n\r\n                                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n                                        </Link>\r\n                                            <h4 className=\"modal-title\" id=\"myModalLabel\"></h4>\r\n                                        </div>\r\n                                        <div className=\"modal-body\">\r\n\r\n                                                <div className=\"row\">\r\n                                                        <div className=\"col-sm-12\">\r\n                                                            <div className=\"form-group\" >\r\n                                                                <label >Are You Sure You want to delete ?</label>\r\n                                                            </div>\r\n                                    \r\n                                                        </div>\r\n                                                    </div>                        \r\n\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n\r\n                                                    <Link to={'/admin'} className=\"btn btn-link\">\r\n\r\n                                                        <button type=\"button\" className=\"btn btn-default\" id=\"close-delete-button-model\"\r\n                                                            data-dismiss=\"modal\">Close</button>\r\n\r\n                                                    </Link>\r\n                                                \r\n                                                        <button type=\"submit\" className=\"btn btn-primary\" onClick = { () => { onDeleteAdmin(id) } }\r\n                                                    >Delete</button>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                </div> \r\n                }\r\n\r\n                {/*   THIS PART FOR DELETE  START   */}\r\n\r\n            </Row>\r\n            </div>\r\n            <Footer />\r\n\r\n        </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n\r\n    list        : adminReducer.list,\r\n    isloading   : adminReducer.isloading,\r\n    message     : adminReducer.message,\r\n    isSuccess   : adminReducer.isSuccess\r\n})\r\n\r\nexport default connect(mapStateToProps, { postAddAdmin, postEditAdmin, postDeleteAdmin, fetchAdmin })(AdminForm)\r\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\n\r\nimport AdminForm from './AdminForm'\r\nimport { postDeleteAdmin } from '../../actions/admin'\r\n\r\nconst Admin = (props) => {\r\n\r\n    console.log('admin props --->',props);\r\n\r\n    return ( \r\n                <Fragment>\r\n                    <tr >\r\n                        <td >\r\n                            <img style= {{ height: '50px', width: '50px'}} src={baseUrl+props.profileImage} />   \r\n                        </td>\r\n                        <td >{props.firstName}</td>  \r\n                        <td >{props.lastName}</td>                          \r\n                        <td>{props.email}</td>\r\n                        <td>{props.status === 'yes' ? 'Active':'DeActive'}</td>\r\n                   \r\n                        <td className=\"text-center\">\r\n                                <Link className=\"view\" title=\"View\" style={{marginRight:'5px'}} to= {{ pathname: `/admin/view/${props._id}` }}  >\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Edit\" style={{marginRight:'5px'}} to= {{ pathname: `/admin/edit/${props._id}` }}  >\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Delete\" to= {{ pathname: `/admin/delete/${props._id}` }}  >\r\n                                    <i className=\"fa fa-trash\" ></i>\r\n                                </Link>\r\n                        </td>\r\n                    </tr>\r\n   \r\n                </Fragment>                 \r\n            )\r\n    }\r\n    export default connect(null, { postDeleteAdmin })(Admin)\r\n\r\n//export default Admin","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Loader } from 'react-overlay-loader';\r\n \r\nimport 'react-overlay-loader/styles.css';\r\nimport { fetchAdmin } from '../../actions/admin'\r\nimport Header from '../../components/header/Header'\r\nimport Menu from '../../components/menu/Menu'\r\nimport Footer from '../../components/footer/Footer'\r\nimport Admin  from './Admin'\r\nimport LoginForm  from '../login/LoginForm'\r\n\r\nconst AdminList = props => {\r\n    console.log(props)\r\n\r\n    useEffect( ()=>(\r\n        props.fetchAdmin()\r\n    ), [])\r\n\r\n\r\n    const history = useHistory();\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchAdmin(undefined, pageNumber ,10)\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchAdmin(undefined, undefined ,undefined,e.target.value)\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchAdmin(undefined, undefined ,undefined,'')\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n<div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Admin Management</h5>\r\n                                    <Link to= {{ pathname: `/admin/add` }}  >\r\n                                            <button title=\"Add new\" id=\"modal-add\" className=\"btn btn-primary pull-right\"\r\n                                            data-target=\"#modal-form-Edit\" data-toggle=\"modal\">\r\n                                            <i className=\"fa fa-plus\"></i> Add Admin</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n                                            <input id=\"searchinput\" placeholder=\"Search By Admin Name\" type=\"search\" onChange={ (e) => { handlePageSearch(e) } } className=\"form-control\" />\r\n                                            \r\n                                            <span id=\"searchclear\" className=\"glyphicon\" onClick={ ()=> {handleClear()}}>\r\n                                                <i className=\"fa fa-times\"></i>\r\n                                            </span>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>Profile Image</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>First Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Last Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Email</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Status</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                            {(function() {\r\n                                                \r\n                                                if (props.isloading) {\r\n                                                    return (\r\n\r\n                                                       <Loader fullPage loading />\r\n                                               \r\n                                                    )\r\n                                                 }else \r\n                                                if (props.list.success !== false && props.list.STATUSCODE !== 4000) {\r\n\r\n                                                    return props.list.response.docs\r\n                                                    .map( list => <Admin key={list._id} {...list}/> );\r\n\r\n                                                } else if (props.list.success === false && props.list.STATUSCODE === 4000){\r\n                                                    return  history.push('/login')\r\n                                                }\r\n                                            })\r\n                                            ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.list.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.list.response.page}\r\n                                            itemsCountPerPage={props.list.response.limit}\r\n                                            totalItemsCount={props.list.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <Footer />\r\n            </div>\r\n\r\n   \r\n  \r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n\r\n    list:adminReducer.list,\r\n    isSuccess   : adminReducer.isSuccess,\r\n    message     : adminReducer.message,\r\n    isloading:adminReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchAdmin})(AdminList)","\r\nimport React, { Component, Fragment, useEffect, useState, useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage, FieldArray } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\nimport { postAddUser, fetchUser, postEditUser, postDeleteUser, postSendEmail } from '../../actions/admin'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\nimport NumericInput from 'react-numeric-input';\r\nimport 'react-overlay-loader/styles.css';\r\nimport Select from 'react-select';\r\nimport ReactDropzone from \"react-dropzone\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {usePrevious} from '../../shared/utils'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';  \r\nimport Thumb from './Thumb'\r\n\r\nconst UserForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   let textInput = useRef(null);\r\n   let [adminres, setAdminres] = useState(null);\r\n\r\n   function handleAdminResponse(e) {\r\n\r\n        console.log('e---',e.target.value);\r\n        setAdminres(e.target.value)\r\n\r\n   }\r\n\r\n\r\n   function focusTextInput(adminresponse,email,fullname) {\r\n    // console.log('adminresponse---',adminresponse);\r\n    // console.log('email---',email);\r\n    // console.log('fullname---',fullname);\r\n\r\n        if(adminresponse == '')\r\n        {\r\n            toast.warn(`Please fill the Admin response`)\r\n        }else  if(email == '')\r\n        {\r\n            toast.warn(`Please fill Email`)\r\n        }else  if(fullname == '')\r\n        {\r\n            toast.warn(`Please fill Full Name`)\r\n        }else{\r\n\r\n            props.postSendEmail(\r\n                {\r\n                    adminresponse:adminresponse,\r\n                    email:email,\r\n                    name:fullname\r\n                }   \r\n            )\r\n\r\n            toast.success(`Mail has been sent to ${fullname}`)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect( ()=>(\r\n        props.fetchUser(props.match.params.id)\r\n    ), [])\r\n    console.log('props values--->',props);\r\n\r\n    const { id }         = props.match.params;\r\n    let { path }         = props.match;\r\n    let pathEditView     = path.split('/')[2]\r\n    const isAddMode      = !id;\r\n    const prevIsSuccess  = usePrevious(props.isSuccess);    \r\n    const prevIsMailsend = usePrevious(props.ismailsend);    \r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted',props.isSuccess);\r\n\r\n        if(prevIsSuccess !== undefined && prevIsSuccess === false)\r\n        {\r\n            if(props.isSuccess === true)\r\n            {\r\n\r\n                toast.success(props.message)\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n            }else if(props.isSuccess === false){\r\n\r\n                toast.warn(props.message)\r\n\r\n            }\r\n        }\r\n\r\n    }, [prevIsSuccess, props.message])\r\n\r\n\r\n    let definedid               = ''\r\n    let definedfullName         = ''\r\n    let definedemail            = ''\r\n    let definedphoneNumber      = ''\r\n    let definedlocation         = ''\r\n    let definedage              = ''\r\n    let definedcountry          = ''\r\n    let definedcity             = ''\r\n    let defineddob              = ''\r\n    let definedgender           = ''\r\n    let definedstatus           = ''\r\n    let defineddeleteId         = ''\r\n    let definedprofileImage     = ''\r\n    let definedimageSavedUrl    =''\r\n    let definedselfieImage      = ''\r\n    let definedselfieImageSavedUrl=''\r\n    let definedadminresponse    = ''\r\n    //deleteId\r\n    let [dob, setCounter]   = useState(null);\r\n    let [open, setOpen]     = useState(false);\r\n    \r\n\r\n    let [openProfile, setOpenProfile] = useState({\r\n        photoIndex: 0,\r\n        isOpenProfileImage: false,\r\n      });\r\n\r\n      let [openSelfie, setOpenSelfie] = useState({\r\n        selfieIndex: 0,\r\n        isOpenSelfie: false,\r\n      });\r\n      \r\n      \r\n    let profile        = []\r\n    let profileArray   = []\r\n    let selfieprofile  = []\r\n    if(!isAddMode && props.userList.response.docs.length == 1)\r\n    {\r\n        props.userList.response.docs.map((response) => \r\n        {\r\n            defineddeleteId         = pathEditView == 'delete' ? response._id: ''\r\n            definedid               = response._id\r\n            definedfullName         = response.fullName\r\n            definedadminresponse    = response.adminresponse\r\n            definedemail            = response.email\r\n            definedphoneNumber      = response.phoneNumber\r\n            definedlocation         = response.location\r\n            definedage              = response.age\r\n            definedgender           = response.gender\r\n            definedcountry          = response.country\r\n            definedcity             = response.city\r\n            defineddob              = response.dob\r\n            definedprofileImage     = response.profileImage\r\n\r\n            definedimageSavedUrl    = (response.profileImage != '') ?\r\n                                        baseUrl+response.profileImage : baseUrl+'uploads/dummy/demo-profile.png'\r\n\r\n            definedselfieImage      = response.selfieImage\r\n\r\n            definedselfieImageSavedUrl = (response.selfieImage != '') ?\r\n                                        baseUrl+response.selfieImage : baseUrl+'uploads/dummy/demo-profile.png'\r\n\r\n            definedstatus           = response.status\r\n\r\n            selfieprofile           =  (response.selfieImage != '') ?\r\n                                       [baseUrl+response.selfieImage] : [baseUrl+'uploads/dummy/demo-profile.png']\r\n\r\n            profile                 = response.profile.length > 0 ? response.profile\r\n            .sort((a, b) => a.isMain === true ? -1 : 1)\r\n            .map( (profImg) => {\r\n                return  baseUrl+profImg.media\r\n            }) : [baseUrl+'uploads/dummy/demo-profile.png']\r\n\r\n            profileArray            = response.profile\r\n       })\r\n\r\n    }\r\n    console.log('profile---->',profile)\r\n    useEffect( ()=>{\r\n\r\n         if(defineddob && defineddob != '' )\r\n        {\r\n            setCounter(new Date(defineddob))\r\n        }\r\n\r\n    },[defineddob])\r\n\r\n \r\n    const closeLightbox = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n        addEditFields ={\r\n            deleteId                : defineddeleteId,\r\n            adminresponse           : definedadminresponse,\r\n            fullName                : definedfullName,\r\n            email                   : definedemail,\r\n            phoneNumber             : definedphoneNumber,\r\n            location                : definedlocation,\r\n            age                     : definedage,\r\n            gender                  : definedgender,\r\n            country                 : definedcountry,\r\n            city                    : definedcity,\r\n            dob                     : defineddob,\r\n            profileImage            : definedprofileImage,\r\n            selfieImage             : definedselfieImage,\r\n            status                  : 'false',\r\n            password                : '',\r\n            imagePreviewUrl         : '',\r\n            selfieImagePreviewUrl   : '',\r\n            profileArray            : profileArray\r\n\r\n        }\r\n\r\n        valdationShape= {\r\n            fullName: Yup.string()\r\n                .required('Full Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required'),\r\n            password: Yup.string()\r\n                .concat(isAddMode ? Yup.string().required('Password is required') : null)\r\n                .min(6, 'Password must be at least 6 characters'),\r\n            confirmPassword: Yup.string()\r\n                .when('password', (password, schema) => {\r\n                    if (password || isAddMode) return schema.required('Confirm Password is required');\r\n                })\r\n                .oneOf([Yup.ref('password')], 'Passwords must match')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId                : defineddeleteId,\r\n            userId                  : definedid,\r\n            fullName                : definedfullName,\r\n            profileImage            : definedprofileImage,\r\n            selfieImage             : definedselfieImage,\r\n            imageSavedUrl           : definedimageSavedUrl,\r\n            selfieImageSavedUrl     : definedselfieImageSavedUrl,\r\n            email                   : definedemail,\r\n            adminresponse           : definedadminresponse,\r\n            phoneNumber             : definedphoneNumber,\r\n            location                : definedlocation,\r\n            age                     : definedage,\r\n            gender                  : definedgender,\r\n            country                 : definedcountry,\r\n            city                    : definedcity,\r\n            dob                     : defineddob,\r\n            status                  : definedstatus,\r\n            imagePreviewUrl         : '',\r\n            selfieImagePreviewUrl   : '',\r\n            profileArray            : profileArray\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            fullName: Yup.string()\r\n                .required('Full Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n\r\n            props.postAddUser(fields)\r\n\r\n        } else {\r\n\r\n            props.postEditUser(fields)\r\n        }\r\n\r\n    }\r\n\r\n    function onDeleteUser(id){\r\n        console.log('id---',id);\r\n        props.postDeleteUser({userId:id})\r\n        toast.success(\"User Data Deleted Successfully.\")\r\n\r\n        setTimeout( ()=>{\r\n\r\n            document.getElementById('close-delete-button-model').click() ;\r\n\r\n        },2500)\r\n\r\n    }\r\n    const setCount = date => {\r\n\r\n       console.log('setCount date---',setCount);\r\n        setCounter(date);\r\n\r\n    };\r\n\r\n   const { photoIndex, isOpenProfileImage } = openProfile;\r\n   const { selfieIndex, isOpenSelfie }      = openSelfie;\r\n\r\n   const roundButtonStyle = {\r\n    borderRadius: '50%'\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"wrapper\">\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n            {props.isloading &&\r\n\r\n                           <Loader fullPage loading />\r\n\r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n            { pathEditView == 'edit' && props.userList.success !== false && props.userList.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue,handleChange }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add User' : 'Edit User'}</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-user-plus\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Name</label>\r\n                                                <Field name=\"fullName\"  \r\n                                                     type=\"text\" className={'form-control' + (errors.fullName && touched.fullName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"fullName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Email</label>\r\n                                            <Field name=\"email\"  type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Phone Number</label>\r\n                                            <Field name=\"phoneNumber\" type=\"text\" className={'form-control' + (errors.phoneNumber && touched.phoneNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"phoneNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Location</label>\r\n                                            <Field name=\"location\" type=\"text\" className={'form-control' + (errors.location && touched.location ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"location\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Age</label>\r\n                                            <div>\r\n                                            <NumericInput min={0} max={150} value={values.age} onChange={ (e)=> { setFieldValue(`age`,e) }}/>\r\n                                            </div>\r\n                                            <ErrorMessage name=\"age\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Country</label>\r\n                                            <Field name=\"country\" type=\"text\" className={'form-control' + (errors.country && touched.country ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"country\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>City</label>\r\n                                            <Field name=\"city\" type=\"text\" className={'form-control' + (errors.city && touched.city ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"city\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>DOB</label>\r\n                                            <div>\r\n                                            <DatePicker\r\n                                                    selected={dob}\r\n                                                    onChange={(dt) => {\r\n                                                    // console.log('dt----',dt);\r\n                                                        setCounter(dt)\r\n                                                        setFieldValue(`dob`,new Date(dt))\r\n                                                    }}\r\n                                                    dateFormat = 'yyyy-MM-dd'\r\n                                                    isClearable\r\n                                                    showYearDropdown\r\n                                                    scrollableYearDropdown\r\n                                            />\r\n                                            </div>\r\n                                            <ErrorMessage name=\"dob\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Gender</label>\r\n                                            <Field name=\"gender\" as=\"select\" className={'form-control' + (errors.gender && touched.gender ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"Male\">Male</option>\r\n                                                        <option value=\"Female\">Female</option>\r\n                                                        <option value=\"Others\">Others</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n\r\n                                    <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                        // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                                        e.preventDefault();\r\n\r\n                                                        let reader = new FileReader();\r\n                                                        let file = e.target.files[0];\r\n                                                    \r\n                                                        reader.onloadend = () => {\r\n                                                            console.log('reader.result---',reader.result);\r\n                                                            \r\n                                                            setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                            setFieldValue(`profileImage`, file)\r\n                                                            // this.setState({\r\n                                                            // file: file,\r\n                                                            // imagePreviewUrl: reader.result\r\n                                                            // });\r\n                                                        }\r\n                                                    \r\n                                                        reader.readAsDataURL(file)\r\n\r\n\r\n                                                }} />\r\n                    \r\n                                            <img src={values.imageSavedUrl}  \r\n                                            style={{height:'150px', width:'150px', marginRight:'30px'}}\r\n                                            onClick = { () => setOpenProfile({ ...openProfile, isOpenProfileImage: true })}\r\n                                            /> \r\n                                            \r\n                                            {isOpenProfileImage && (\r\n                                                <Lightbox\r\n                                                mainSrc={profile[photoIndex]}\r\n                                                nextSrc={profile[(photoIndex + 1) % profile.length]}\r\n                                                prevSrc={profile[(photoIndex + profile.length - 1) % profile.length]}\r\n                                                onCloseRequest={() => setOpenProfile({ ...openProfile, isOpenProfileImage: false })}\r\n                                                onMovePrevRequest={() =>\r\n                                                    setOpenProfile({\r\n                                                        ...openProfile,\r\n                                                    photoIndex: (photoIndex + profile.length - 1) % profile.length,\r\n                                                    })\r\n                                                }\r\n                                                onMoveNextRequest={() =>\r\n                                                    setOpenProfile({\r\n                                                        ...openProfile,\r\n                                                    photoIndex: (photoIndex + 1) % profile.length,\r\n                                                    })\r\n                                                }\r\n                                                />\r\n                                            )\r\n                                            }\r\n\r\n\r\n\r\n                                            {\r\n                                                values.imagePreviewUrl && \r\n                                                \r\n                                                <img src={values.imagePreviewUrl}  name=\"imagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n                                                \r\n                                            } \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n\r\n                                    <FormGroup>\r\n                                        <label>Selfie Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"selfieImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                            // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                            e.preventDefault();\r\n\r\n                                            let reader = new FileReader();\r\n                                            let file = e.target.files[0];\r\n\r\n                                            reader.onloadend = () => {\r\n                                            console.log('reader.result---',reader.result);\r\n\r\n                                            setFieldValue(`selfieImagePreviewUrl`, reader.result)\r\n                                            setFieldValue(`selfieImage`, file)\r\n                                           \r\n                                            }\r\n\r\n                                            reader.readAsDataURL(file)\r\n\r\n\r\n                                            }} />\r\n\r\n                                            <img \r\n                                            src={values.selfieImageSavedUrl}  \r\n                                            style={{height:'150px', width:'150px',\r\n                                            marginRight:'30px'\r\n                                            }}\r\n                                            onClick = { () => setOpenSelfie({ ...openSelfie, isOpenSelfie: true })}\r\n                                            /> \r\n\r\n                                            {isOpenSelfie && (\r\n                                            <Lightbox\r\n                                            mainSrc={selfieprofile[selfieIndex]}\r\n                                            nextSrc={selfieprofile[(selfieIndex + 1) % selfieprofile.length]}\r\n                                            prevSrc={selfieprofile[(selfieIndex + selfieprofile.length - 1) % selfieprofile.length]}\r\n                                            onCloseRequest={() => setOpenSelfie({ ...openSelfie, isOpenSelfie: false })}\r\n                                            onMovePrevRequest={() =>\r\n                                            setOpenSelfie({\r\n                                            ...openSelfie,\r\n                                            selfieIndex: (selfieIndex + selfieprofile.length - 1) % selfieprofile.length,\r\n                                            })\r\n                                            }\r\n                                            onMoveNextRequest={() =>\r\n                                            setOpenSelfie({\r\n                                            ...openSelfie,\r\n                                            selfieIndex: (selfieIndex + 1) % selfieprofile.length,\r\n                                            })\r\n                                            }\r\n                                            />\r\n                                            )\r\n                                            }\r\n\r\n                                            {\r\n                                            values.selfieImagePreviewUrl && \r\n\r\n                                            <img src={values.selfieImagePreviewUrl}  name=\"selfieImagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n\r\n                                            }                                         \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n                                    \r\n                                <Row>\r\n\r\n                                    <Col lg={4}>\r\n                                    <FormGroup>\r\n                                        <label>Status</label>\r\n                                       \r\n                                            <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                    <option value=\"true\">Active</option>\r\n                                                    <option value=\"false\">DeActive</option>\r\n                                            </Field>\r\n\r\n                                            <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                \r\n                                </Row>\r\n\r\n\r\n                                <Row>\r\n\r\n                                    <Col lg={12}>\r\n                                    <FormGroup>\r\n                                        <label>Admin Response</label>\r\n                                       \r\n                                            <Field className=\"form-control\" component=\"textarea\" id=\"adminresponse\" name=\"adminresponse\" value={values.adminresponse} />\r\n\r\n                                            <ErrorMessage name=\"adminresponse\" component=\"div\" className=\"invalid-feedback\" />\r\n                                            \r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                \r\n                                </Row>\r\n\r\n                                <Row>\r\n\r\n                                    <Col lg={4}>\r\n                                    <FormGroup>\r\n                                       \r\n                                            <button \r\n                                                style={{'margin-right': '0px'}}  \r\n                                                onClick={(e)=> { focusTextInput(values.adminresponse,values.email,values.fullName) }} \r\n                                                type=\"button\"  \r\n                                                className=\"btn btn-warning pull-left\"\r\n                                            >\r\n                                            Send Email To User\r\n                                            </button>\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                \r\n                                </Row>\r\n\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                            </Col>\r\n                        \r\n                        </Row>\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR VIEW  START   */}\r\n\r\n            { pathEditView == 'view' && props.userList.success !== false && props.userList.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues}>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n                    console.log('values.status--',values.status);\r\n                    \r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>View User</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                                <div className=\"portlet box blue\">\r\n                                    <div className=\"portlet-title\">\r\n                                    <div className=\"caption\">\r\n                                        <i className=\"fa fa-user-plus\"></i>\r\n                                    </div>\r\n                                    <div className=\"tools\">\r\n                                        <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                        <div className=\"form-body\">\r\n                                            \r\n                                        <FormGroup row>\r\n                                        <Col md={12}>\r\n\r\n                                            <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                           \r\n                                        </Col>\r\n                                        </FormGroup>\r\n                                        \r\n                                        <Row>\r\n                                            <Col lg={4}>\r\n                                                <FormGroup>\r\n                                                    <label>Name</label>\r\n                                                    <span name=\"fullName\"  className='form-control  no-border'>\r\n                                                        {values.fullName}\r\n                                                    </span>\r\n                                                                                               \r\n                                                </FormGroup>\r\n                                            \r\n                                            </Col>\r\n                                            \r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Email</label>\r\n                                                <span name=\"email\"  className='form-control  no-border'>\r\n                                                        {values.email}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Phone Number</label>\r\n                                                <span name=\"phoneNumber\"  className='form-control  no-border'>\r\n                                                        {values.phoneNumber}\r\n                                                </span>\r\n                                                \r\n                                    \r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            \r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Location</label>\r\n                                                <span name=\"location\"  className='form-control  no-border'>\r\n                                                        {values.location}\r\n                                                </span>\r\n                                    \r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            \r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Age</label>\r\n                                                <span name=\"age\"  className='form-control  no-border'>\r\n                                                        {values.age}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            \r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Country</label>\r\n                                                <span name=\"country\"  className='form-control  no-border'>\r\n                                                        {values.country}\r\n                                                </span>\r\n                                    \r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            \r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>City</label>\r\n                                                <span name=\"city\"  className='form-control  no-border'>\r\n                                                        {values.city}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>DOB</label>\r\n                                                <span name=\"dob\"  className='form-control  no-border'>\r\n                                                        {values.dob}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                            \r\n                                            <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Gender</label>\r\n                                                <span name=\"gender\"  className='form-control  no-border'>\r\n                                                        {values.gender}\r\n                                                </span>\r\n                                            </FormGroup>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n\r\n                                        <FormGroup>\r\n                                            <label>Profile Image</label>\r\n                                            <div className=\"photo-upload\">                   \r\n                                            \r\n                                                    {\r\n                                                        values.imageSavedUrl && \r\n                                                        <img src={values.imageSavedUrl}  \r\n                                                        style={{height:'150px', width:'150px', marginRight:'30px'}}\r\n                                                        onClick = { () => setOpenProfile({ ...openProfile, isOpenProfileImage: true })}\r\n                                                        />                            \r\n                                                    }\r\n                                                    {isOpenProfileImage && (\r\n                                                        <Lightbox\r\n                                                        mainSrc={profile[photoIndex]}\r\n                                                        nextSrc={profile[(photoIndex + 1) % profile.length]}\r\n                                                        prevSrc={profile[(photoIndex + profile.length - 1) % profile.length]}\r\n                                                        onCloseRequest={() => setOpenProfile({ ...openProfile, isOpenProfileImage: false })}\r\n                                                        onMovePrevRequest={() =>\r\n                                                            setOpenProfile({\r\n                                                                ...openProfile,\r\n                                                            photoIndex: (photoIndex + profile.length - 1) % profile.length,\r\n                                                            })\r\n                                                        }\r\n                                                        onMoveNextRequest={() =>\r\n                                                            setOpenProfile({\r\n                                                                ...openProfile,\r\n                                                            photoIndex: (photoIndex + 1) % profile.length,\r\n                                                            })\r\n                                                        }\r\n                                                        />\r\n                                                    )\r\n                                                    }\r\n                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n\r\n\r\n                                        <FormGroup>\r\n                                            <label>Selfie Image</label>\r\n                                            <div className=\"photo-upload\">\r\n\r\n                                                        \r\n                                            {\r\n                                                values.selfieImageSavedUrl && \r\n                                                \r\n                                                <img \r\n                                                src={values.selfieImageSavedUrl}  \r\n                                                style={{height:'150px', width:'150px',\r\n                                                marginRight:'30px'\r\n                                                }}\r\n                                                onClick = { () => setOpenSelfie({ ...openSelfie, isOpenSelfie: true })}\r\n                                            /> \r\n                                                \r\n                                            }\r\n                                            \r\n                                            {isOpenSelfie && (\r\n                                                <Lightbox\r\n                                                mainSrc={selfieprofile[selfieIndex]}\r\n                                                nextSrc={selfieprofile[(selfieIndex + 1) % selfieprofile.length]}\r\n                                                prevSrc={selfieprofile[(selfieIndex + selfieprofile.length - 1) % selfieprofile.length]}\r\n                                                onCloseRequest={() => setOpenSelfie({ ...openSelfie, isOpenSelfie: false })}\r\n                                                onMovePrevRequest={() =>\r\n                                                    setOpenSelfie({\r\n                                                        ...openSelfie,\r\n                                                    selfieIndex: (selfieIndex + selfieprofile.length - 1) % selfieprofile.length,\r\n                                                    })\r\n                                                }\r\n                                                onMoveNextRequest={() =>\r\n                                                    setOpenSelfie({\r\n                                                        ...openSelfie,\r\n                                                    selfieIndex: (selfieIndex + 1) % selfieprofile.length,\r\n                                                    })\r\n                                                }\r\n                                                />\r\n                                            )\r\n                                            }\r\n                                                                                    \r\n                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    <Row>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Status</label>\r\n                                                <span name=\"status\"  className='form-control  no-border'>\r\n                                                        {values.status === true? 'Active' : 'DeActive'}\r\n                                                </span>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                    \r\n                                    </Row>\r\n\r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n\r\n                                </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n            \r\n                    </Form>\r\n                    );\r\n                    }}\r\n                    </Formik>\r\n                }\r\n\r\n            {/*   THIS PART FOR VIEW  END   */}\r\n\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR ADD  START   */}\r\n\r\n            { isAddMode  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add User' : 'Edit User'}</h1>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                            \r\n                            <div className=\"portlet box blue\">\r\n                                <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <i className=\"fa fa-user-plus\"></i>\r\n                                </div>\r\n                                <div className=\"tools\">\r\n                                    <a href=\"\" className=\"collapse\" data-original-title=\"\" title=\"\">\r\n                                    </a>\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"portlet-body form\" style={{\"display\": \"block\"}}>\r\n                                    <div className=\"form-body\">\r\n                                        \r\n                                    <FormGroup row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                        <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                            {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                            Save\r\n                                        </button>\r\n\r\n                                    </Col>\r\n                                    </FormGroup>\r\n                                    \r\n                                    <Row>\r\n                                        <Col lg={4}>\r\n                                            <FormGroup>\r\n                                                <label>Name</label>\r\n                                                <Field name=\"fullName\" type=\"text\" className={'form-control' + (errors.fullName && touched.fullName ? ' is-invalid' : '')} />\r\n                                                \r\n                                                <ErrorMessage name=\"fullName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        \r\n                                            </FormGroup>\r\n                                        \r\n                                        </Col>\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Email</label>\r\n                                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Phone Number</label>\r\n                                            <Field name=\"phoneNumber\" type=\"text\" className={'form-control' + (errors.phoneNumber && touched.phoneNumber ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"phoneNumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Location</label>\r\n                                            <Field name=\"location\" type=\"text\" className={'form-control' + (errors.location && touched.location ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"location\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Age</label>\r\n                                            <div>\r\n                                            <NumericInput min={0} max={150} value={values.age} onChange={ (e)=> { setFieldValue(`age`,e) }}/>\r\n                                            </div>\r\n                                            <ErrorMessage name=\"age\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Country</label>\r\n                                            <Field name=\"country\" type=\"text\" className={'form-control' + (errors.country && touched.country ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"country\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>City</label>\r\n                                            <Field name=\"city\" type=\"text\" className={'form-control' + (errors.city && touched.city ? ' is-invalid' : '')} />\r\n                                            \r\n                                            <ErrorMessage name=\"city\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>DOB</label>\r\n                                            <div>\r\n                                            <DatePicker\r\n                                                    selected={dob}\r\n                                                    onChange={(dt) => {\r\n                                                    // console.log('dt----',dt);\r\n                                                        setCounter(dt)\r\n                                                        setFieldValue(`dob`,new Date(dt))\r\n                                                    }}\r\n                                                    dateFormat = 'yyyy-MM-dd'\r\n                                                    isClearable\r\n                                                    showYearDropdown\r\n                                                    scrollableYearDropdown\r\n                                            />\r\n                                            </div>\r\n                                            <ErrorMessage name=\"dob\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        <Col lg={4}>\r\n                                        <FormGroup>\r\n                                            <label>Gender</label>\r\n                                            <Field name=\"gender\" as=\"select\" className={'form-control' + (errors.gender && touched.gender ? ' is-invalid' : '')}>\r\n                                                        <option value=\"\">Select an Option</option>\r\n                                                        <option value=\"Male\">Male</option>\r\n                                                        <option value=\"Female\">Female</option>\r\n                                                        <option value=\"Others\">Others</option>\r\n                                            </Field>                                            \r\n                                            <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                                \r\n                                        </FormGroup>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n\r\n                                    <FormGroup>\r\n                                        <label>Profile Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"profileImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                                        // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                                        e.preventDefault();\r\n\r\n                                                        let reader = new FileReader();\r\n                                                        let file = e.target.files[0];\r\n                                                    \r\n                                                        reader.onloadend = () => {\r\n                                                            console.log('reader.result---',reader.result);\r\n                                                            \r\n                                                            setFieldValue(`imagePreviewUrl`, reader.result)\r\n                                                            setFieldValue(`profileImage`, file)\r\n                                                            // this.setState({\r\n                                                            // file: file,\r\n                                                            // imagePreviewUrl: reader.result\r\n                                                            // });\r\n                                                        }\r\n                                                    \r\n                                                        reader.readAsDataURL(file)\r\n\r\n\r\n                                                }} />\r\n\r\n                                                {\r\n                                                    values.imagePreviewUrl && \r\n                                                    \r\n                                                    <img src={values.imagePreviewUrl}  name=\"imagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n                                                    \r\n                                                } \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n\r\n                                    <FormGroup>\r\n                                        <label>Selfie Image</label>\r\n                                        <div className=\"photo-upload\">\r\n\r\n                                            <input className=\"btn btn-warning btupload\"  id=\"file\" name=\"selfieImage\"  type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                            // console.log('event.target.files[0]--',event.target.files[0]);\r\n                                            e.preventDefault();\r\n\r\n                                            let reader = new FileReader();\r\n                                            let file = e.target.files[0];\r\n\r\n                                            reader.onloadend = () => {\r\n                                            console.log('reader.result---',reader.result);\r\n\r\n                                            setFieldValue(`selfieImagePreviewUrl`, reader.result)\r\n                                            setFieldValue(`selfieImage`, file)\r\n                                           \r\n                                            }\r\n\r\n                                            reader.readAsDataURL(file)\r\n\r\n\r\n                                            }} />\r\n\r\n                                            {\r\n                                            values.selfieImagePreviewUrl && \r\n\r\n                                            <img src={values.selfieImagePreviewUrl}  name=\"selfieImagePreviewUrl\" style={{height:'150px', width:'150px'}} /> \r\n\r\n                                            }                                         \r\n                                        \r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n                                    \r\n                                <Row>\r\n\r\n                                    <Col lg={4}>\r\n                                    <FormGroup>\r\n                                        <label>Status</label>\r\n                                       \r\n                                            <Field name=\"status\" as=\"select\" className={'form-control' + (errors.status && touched.status ? ' is-invalid' : '')}>\r\n                                                    <option value=\"true\">Active</option>\r\n                                                    <option value=\"false\">DeActive</option>\r\n                                            </Field>\r\n\r\n                                            <ErrorMessage name=\"status\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                \r\n                                </Row>\r\n\r\n                                <Row>\r\n\r\n                                    <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Password</label>\r\n\r\n                                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                                        \r\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n\r\n                                    </FormGroup>\r\n                                    </Col>\r\n\r\n                                     <Col lg={6}>\r\n                                    <FormGroup>\r\n                                        <label>Confirm Password</label>\r\n                                       \r\n                                                <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\r\n                                            \r\n                                                <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup row>\r\n                                <Col md={12}>\r\n\r\n                                    <Link to={isAddMode ? '.' : '..'} className=\"pull-right btn btn-primary\">Cancel</Link>\r\n\r\n                                    <button style={{'margin-right': '20px'}}  type=\"submit\"  className=\"pull-right btn btn-primary\">\r\n                                        {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                        Save\r\n                                    </button>\r\n\r\n                                </Col>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                           \r\n                </Col>\r\n            \r\n            </Row>\r\n                    </Form>\r\n                    );\r\n                    }}\r\n                    </Formik>\r\n                }\r\n            {/*   THIS PART FOR ADD  END   */}\r\n\r\n\r\n\r\n\r\n            {/*   THIS PART FOR DELETE  START   */}\r\n\r\n            { pathEditView == 'delete' && props.userList.success !== false && props.userList.response.docs.length == 1  && \r\n        \r\n               <div className=\"modal show\" id=\"modal-form-delete\">\r\n                            <input type=\"hidden\" name=\"deleteId\" ></input>\r\n\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                    <Link to={'/user'}>\r\n\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n                                    </Link>\r\n                                        <h4 className=\"modal-title\" id=\"myModalLabel\"></h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n\r\n                                            <div className=\"row\">\r\n                                                    <div className=\"col-sm-12\">\r\n                                                        <div className=\"form-group\" >\r\n                                                            <label >Are You Sure You want to delete ?</label>\r\n                                                        </div>\r\n                                \r\n                                                    </div>\r\n                                                </div>                        \r\n\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n\r\n                                                <Link to={'/user'} className=\"btn btn-link\">\r\n\r\n                                                    <button type=\"button\" className=\"btn btn-default\" id=\"close-delete-button-model\"\r\n                                                        data-dismiss=\"modal\">Close</button>\r\n\r\n                                                </Link>\r\n                                            \r\n                                                    <button type=\"submit\" className=\"btn btn-primary\" onClick = { () => { onDeleteUser(id) } }\r\n                                                >Delete</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div> \r\n            }\r\n\r\n            {/*   THIS PART FOR DELETE  START   */}\r\n\r\n        </Row>\r\n        </div>\r\n        \r\n        <Footer />\r\n    </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n    userList    : adminReducer.userList,\r\n    isSuccess   : adminReducer.isSuccess,\r\n    message     : adminReducer.message,\r\n    ismailsend  : adminReducer.ismailsend,\r\n    sendmailmessage  : adminReducer.sendmailmessage,\r\n    isloading   : adminReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps, { postSendEmail, postAddUser, postEditUser, postDeleteUser, fetchUser })(UserForm)\r\n","import React from \"react\";\n\nexport default class Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) { return; }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) { return null; }\n\n    if (loading) { return <p>loading...</p>; }\n\n    return (<img src={thumb}\n      alt={file.name}\n      className=\"img-thumbnail mt-2\"\n      height={200}\n      width={200} />);\n  }\n}\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\n\r\nimport UserForm from './UserForm'\r\nimport { postDeleteUser } from '../../actions/admin'\r\n\r\nconst User = (props) => {\r\n\r\n    console.log('admin props --->',props.status);\r\n\r\n    return ( \r\n                    <tr >\r\n                        <td >\r\n                            <img style= {{ height: '50px', width: '50px'}} src={baseUrl+props.profileImage} />   \r\n                        </td>\r\n                        <td >{props.fullName}</td>  \r\n                        <td>{props.gender}</td>\r\n                        <td>{props.email}</td>\r\n                        <td>{props.status === true ? 'Active':'DeActive'}</td>\r\n                        \r\n                         <td className=\"text-center\">\r\n                                <Link className=\"view\" title=\"View\" style={{marginRight:'5px'}} to= {{ pathname: `/user/view/${props._id}` }}  >\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Edit\" style={{marginRight:'5px'}} to= {{ pathname: `/user/edit/${props._id}` }}  >\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                </Link>\r\n\r\n                                <Link className=\"view\" title=\"Delete\" to= {{ pathname: `/user/delete/${props._id}` }}  >\r\n                                    <i className=\"fa fa-trash\" ></i>\r\n                                </Link>\r\n                        </td> \r\n                    </tr>\r\n               )\r\n    }\r\n    export default connect(null, { postDeleteUser })(User)\r\n\r\n//export default User","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { fetchUser } from '../../actions/admin'\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport User  from './User'\r\nimport { Loader } from 'react-overlay-loader';\r\n \r\nimport 'react-overlay-loader/styles.css';\r\nconst UserList = props => {\r\n    console.log(props)\r\n    useEffect( ()=>(\r\n        props.fetchUser()\r\n    ), [])\r\n    let history = useHistory()\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchUser(undefined, pageNumber ,10)\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchUser(undefined, undefined ,undefined,e.target.value)\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchUser(undefined, undefined ,undefined,'')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">User Management</h5>\r\n                                    <Link to= {{ pathname: `/user/add` }}  >\r\n                                            <button title=\"Add new\" id=\"modal-add\" className=\"btn btn-primary pull-right\"\r\n                                            data-target=\"#modal-form-Edit\" data-toggle=\"modal\">\r\n                                            <i className=\"fa fa-plus\"></i> Add User</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n                                            <input id=\"searchinput\" placeholder=\"Search By User Name\" type=\"search\" onChange={ (e) => { handlePageSearch(e) } } className=\"form-control\" />\r\n                                            \r\n                                            <span id=\"searchclear\" className=\"glyphicon\" onClick={ ()=> {handleClear()}}>\r\n                                                <i className=\"fa fa-times\"></i>\r\n                                            </span>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>Profile Image</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Full Name</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Gender</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Email</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Status</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {(function() {\r\n                                                \r\n                                                     if (props.isloading) {\r\n                                                        return (\r\n                                                            <Loader fullPage loading />\r\n\r\n                                                        )\r\n                                                     }else \r\n                                                    if (props.userList.success !== false && props.userList.STATUSCODE !== 4000) {\r\n\r\n                                                        return props.userList.response.docs\r\n                                                        .map( userList => <User key={userList._id} {...userList}/> );\r\n\r\n                                                    } else if (props.userList.success === false && props.userList.STATUSCODE === 4000){\r\n                                                        if (props.login && props.login.success !== false)\r\n                                                        {\r\n                                                            return  history.push('/user')\r\n\r\n                                                        }\r\n                                                        return  history.push('/login')\r\n                                                    }\r\n                                                    })\r\n                                             ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.userList.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.userList.response.page}\r\n                                            itemsCountPerPage={props.userList.response.limit}\r\n                                            totalItemsCount={props.userList.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer />\r\n   \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n\r\n    userList:adminReducer.userList,\r\n    isSuccess   : adminReducer.isSuccess,\r\n    message     : adminReducer.message,\r\n    isloading:adminReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchUser})(UserList)","import axios from 'axios'\r\nimport { type } from 'os';\r\nimport { baseUrl, localUrl } from '../shared/baseUrl'\r\nimport { getToken } from './admin'\r\n\r\n\r\nexport const FETCH_TERM_LIST_START = 'FETCH_TERM_LIST_START'\r\nexport const FETCH_TERM_LIST_SUCCESS = 'FETCH_TERM_LIST_SUCCESS'\r\nexport const FETCH_TERM_LIST_FAILURE = 'FETCH_TERM_LIST_FAILURE'\r\n\r\nexport const POST_TERM_ADD_START = 'POST_TERM_ADD_START'\r\nexport const POST_TERM_ADD_SUCCESS = 'POST_TERM_ADD_SUCCESS'\r\nexport const POST_TERM_ADD_FAILURE = 'POST_TERM_ADD_FAILURE'\r\n\r\nexport const POST_TERM_EDIT_START = 'POST_TERM_EDIT_START'\r\nexport const POST_TERM_EDIT_SUCCESS = 'POST_TERM_EDIT_SUCCESS'\r\nexport const POST_TERM_EDIT_FAILURE = 'POST_TERM_EDIT_FAILURE'\r\n\r\nexport const POST_TERM_DELETE_START = 'POST_TERM_DELETE_START'\r\nexport const POST_TERM_DELETE_SUCCESS = 'POST_TERM_DELETE_SUCCESS'\r\nexport const POST_TERM_DELETE_FAILURE = 'POST_TERM_DELETE_FAILURE'\r\n\r\n\r\n\r\n//...................TERM ...............................\r\n\r\n    export const postEditTerm = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_TERM_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n    }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n    formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'api/editTerms/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_TERM_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_TERM_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n    }\r\n\r\n    export const fetchTerm = (id,page,limit,searchName) => {\r\n\r\n    let token = JSON.parse(getToken()).token\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n        }\r\n    return (dispatch) => {\r\n        dispatch(fetchTermRequest())\r\n\r\n        axios\r\n        .get(baseUrl+'api/listTerms/', {\r\n            headers: headers,\r\n            params:{\r\n                ...(id ? { termId: id } : {}),\r\n                ...(searchName ? { searchName: searchName } : {}),\r\n                ...(page ? { page: page } : {}),\r\n                ...(limit ? { limit: limit } : {})\r\n            }\r\n            })\r\n        .then(res =>{\r\n            console.log(res)\r\n            dispatch(fetchTermSuccess(res.data))\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            dispatch(fetchTermFailure(err.message))\r\n        })\r\n    }\r\n    }\r\n\r\n    export const fetchTermRequest = () => {\r\n    return {\r\n        type: FETCH_TERM_LIST_START\r\n    }\r\n    }\r\n\r\n    export const fetchTermSuccess = users => {\r\n    return {\r\n        type: FETCH_TERM_LIST_SUCCESS,\r\n        payload: users\r\n    }\r\n    }\r\n\r\n    export const fetchTermFailure = err => {\r\n    return {\r\n        type: FETCH_TERM_LIST_FAILURE,\r\n        payload: err\r\n    }\r\n    }\r\n\r\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nconst Term = (props) => {\r\n\r\n    console.log('admin props --->',props);\r\n\r\n    return ( \r\n                <Fragment>\r\n                    <tr >\r\n                        <td >1.</td>  \r\n                        <td dangerouslySetInnerHTML={{__html: props.description}} />                     \r\n                        <td>\r\n                          \r\n\r\n                                <Link to= {{ pathname: `/term/edit/${props._id}` }}  >\r\n\r\n                                    <button type=\"button\"   className=\"btn btn-primary\" id=\"modalprintedit\"\r\n                                    data-toggle=\"modal\" style={{'marginRight':'10px'}} data-target=\"#modal-form-Edit\"\r\n                                    title=\"Edit\">\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                    </button>\r\n                                </Link>\r\n\r\n                               \r\n                        </td>\r\n                    </tr>\r\n   \r\n                </Fragment>                 \r\n            )\r\n    }\r\n    export default connect(null, { })(Term)\r\n\r\n//export default Term","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { fetchTerm } from '../../actions/terms'\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport Term  from './Term'\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nconst TermList = props => {\r\n    console.log(props)\r\n    useEffect( ()=>(\r\n        props.fetchTerm()\r\n    ), [])\r\n    let history = useHistory()\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchTerm(undefined, pageNumber ,3)\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchTerm(undefined, undefined ,undefined,e.target.value)\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchTerm(undefined, undefined ,undefined,'')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Term Management</h5>\r\n                                   \r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>SNo.</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Description</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {(function() {\r\n                                                \r\n                                                     if (props.isloading) {\r\n                                                        return (\r\n                                                            <Loader fullPage loading />\r\n\r\n                                                        )\r\n                                                     }else \r\n                                                    if (props.termlist.success !== false && props.termlist.STATUSCODE !== 4000) {\r\n\r\n                                                        return props.termlist.response.docs\r\n                                                        .map( termlist => <Term key={termlist._id} {...termlist}/> );\r\n\r\n                                                    } else if (props.termlist.success === false && props.termlist.STATUSCODE === 4000){\r\n                                                        if (props.login && props.login.success !== false)\r\n                                                        {\r\n                                                            return  history.push('/term')\r\n\r\n                                                        }\r\n                                                        return  history.push('/login')\r\n                                                    }\r\n                                                    })\r\n                                             ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.termlist.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.termlist.response.page}\r\n                                            itemsCountPerPage={props.termlist.response.limit}\r\n                                            totalItemsCount={props.termlist.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer />\r\n   \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({termReducer}) => ({\r\n\r\n    termlist:termReducer.termlist,\r\n    isloading:termReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchTerm})(TermList)","\r\nimport React, { Component, Fragment, useEffect, useState,useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {  fetchTerm, postEditTerm } from '../../actions/terms'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nimport './TermForm.css';\r\n\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n    return ref.current;\r\n  }\r\n\r\nconst TermForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n   console.log('lastIndex----',lastIndex);\r\n   \r\n   var id = window.location.href.substring(lastIndex + 1); //after this id=\"true\"\r\n   console.log('path----',id);\r\n\r\n    useEffect( ()=>(\r\n        props.fetchTerm(id)\r\n    ), [])\r\n    console.log('props values--->',props);\r\n\r\n    var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n    console.log('lastIndex----',lastIndex);\r\n\r\n    let pathEditView = window.location.href.split('/')[ window.location.href.split('/').length -2]\r\n    console.log('pathEditView--------->',pathEditView);\r\n\r\n    const isAddMode = id=='add' ? true:false;\r\n\r\n    const prevIsSuccess = usePrevious(props.isSuccess);    \r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted',props.isSuccess);\r\n\r\n        if(prevIsSuccess === false && props.isSuccess === true)\r\n        {\r\n   \r\n                toast.success(\"Term Updated Successfully.\")\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n           \r\n        }\r\n\r\n    }, [props.isSuccess,prevIsSuccess])\r\n\r\n\r\n\r\n    let definedid = ''\r\n    let defineddescription = ''\r\n    let defineddeleteId = ''\r\n    //deleteId\r\n    if(props.termlist.response.docs.length == 1)\r\n    {\r\n        defineddeleteId = pathEditView == 'delete' ? props.termlist.response.docs[0]._id: ''\r\n        definedid = props.termlist.response.docs[0]._id\r\n\r\n        defineddescription = props.termlist.response.docs[0].description\r\n\r\n    }\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            termId: definedid,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n\r\n            props.postAddTerm(fields)\r\n\r\n        } else {\r\n\r\n            props.postEditTerm(fields)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n            {props.isloading &&\r\n\r\n                <Loader fullPage loading />\r\n\r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n            { pathEditView == 'edit' && props.termlist.success !== false && props.termlist.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Term' : 'Edit Term'}</h1>\r\n                        \r\n\r\n                        <FormGroup row>\r\n                        <Label for=\"description\" md={3}>Description</Label>\r\n                        <Col md={9}>\r\n\r\n                            <CKEditor\r\n                                editor={ ClassicEditor }\r\n                                data={values.description}\r\n                                disabled={false}\r\n                                onInit={ editor => {\r\n                                    // You can store the \"editor\" and use when it is needed.\r\n                                    console.log( 'Editor is ready to use!', editor );\r\n                                } }\r\n                                onChange={ ( event, editor ) => {\r\n                                    const data = editor.getData();\r\n                                    setFieldValue(`description`, data)\r\n                                    console.log( { event, editor, data } );\r\n                                } }\r\n                                onBlur={ ( event, editor ) => {\r\n                                    console.log( 'Blur.', editor );\r\n                                } }\r\n                                onFocus={ ( event, editor ) => {\r\n                                    console.log( 'Focus.', editor );\r\n                                } }\r\n                            />\r\n\r\n                            <ErrorMessage name=\"description\" component=\"div\" className=\"invalid-feedback\" />\r\n                        \r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                        <Col md={9}>\r\n\r\n                            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\r\n                                {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                Save\r\n                            </button>\r\n                            <Link to={isAddMode ? '.' : '..'} className=\"btn btn-link\">Cancel</Link>\r\n\r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n        </Row>\r\n        </div>\r\n        <Footer />\r\n    </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({termReducer}) => ({\r\n    termlist:termReducer.termlist,\r\n    isSuccess:termReducer.isSuccess,\r\n    isloading:termReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps, {postEditTerm, fetchTerm })(TermForm)\r\n","import axios from 'axios'\r\nimport { type } from 'os';\r\nimport { baseUrl, localUrl } from '../shared/baseUrl'\r\nimport { getToken } from './admin'\r\n\r\n\r\nexport const FETCH_PRIVACY_LIST_START = 'FETCH_PRIVACY_LIST_START'\r\nexport const FETCH_PRIVACY_LIST_SUCCESS = 'FETCH_PRIVACY_LIST_SUCCESS'\r\nexport const FETCH_PRIVACY_LIST_FAILURE = 'FETCH_PRIVACY_LIST_FAILURE'\r\n\r\nexport const POST_PRIVACY_ADD_START = 'POST_PRIVACY_ADD_START'\r\nexport const POST_PRIVACY_ADD_SUCCESS = 'POST_PRIVACY_ADD_SUCCESS'\r\nexport const POST_PRIVACY_ADD_FAILURE = 'POST_PRIVACY_ADD_FAILURE'\r\n\r\nexport const POST_PRIVACY_EDIT_START = 'POST_PRIVACY_EDIT_START'\r\nexport const POST_PRIVACY_EDIT_SUCCESS = 'POST_PRIVACY_EDIT_SUCCESS'\r\nexport const POST_PRIVACY_EDIT_FAILURE = 'POST_PRIVACY_EDIT_FAILURE'\r\n\r\nexport const POST_PRIVACY_DELETE_START = 'POST_PRIVACY_DELETE_START'\r\nexport const POST_PRIVACY_DELETE_SUCCESS = 'POST_PRIVACY_DELETE_SUCCESS'\r\nexport const POST_PRIVACY_DELETE_FAILURE = 'POST_PRIVACY_DELETE_FAILURE'\r\n\r\n\r\n\r\n//...................PRIVACY ...............................\r\nexport const fetchPrivacy = (id,page,limit,searchName) => dispatch =>{\r\n\r\n    console.log('LOGIN auth data--->', JSON.parse(getToken()).token);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    dispatch( {type:'FETCH_PRIVACY_LIST_START'} )\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n      \r\n    axios\r\n    .get(baseUrl+'api/listPrivacyPolicy/', {\r\n        headers: headers,\r\n        params:{\r\n            ...(id ? { privacyId: id } : {}),\r\n            ...(searchName ? { searchName: searchName } : {}),\r\n            ...(page ? { page: page } : {}),\r\n            ...(limit ? { limit: limit } : {})\r\n        }\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'FETCH_PRIVACY_LIST_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'FETCH_PRIVACY_LIST_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n\r\n\r\nexport const postEditPrivacy = postData => dispatch =>{\r\n\r\n    dispatch( {type:'POST_PRIVACY_EDIT_START'} )\r\n\r\n    console.log('Post  edit data--->', postData);\r\n    let token = JSON.parse(getToken()).token\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'x-access-token': token\r\n      }\r\n\r\n    const formData = new FormData();\r\n    for (const key in postData) {\r\n      formData.append(key, postData[key]);\r\n    }\r\n\r\n    axios\r\n    .post(baseUrl+'api/editPrivacyPolicy/',formData, {\r\n        headers: headers\r\n        })\r\n    .then(res =>{\r\n        console.log(res)\r\n        dispatch( { type:'POST_PRIVACY_EDIT_SUCCESS', payload: res.data } )\r\n    })\r\n    .catch(err => {\r\n        console.log(err.response)\r\n        dispatch( { type:'POST_PRIVACY_EDIT_FAILURE', payload: err.response  } )\r\n        \r\n    })\r\n}\r\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { Link , Redirect, useHistory} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nconst Privacy = (props) => {\r\n\r\n    console.log('admin props --->',props);\r\n\r\n    return ( \r\n                <Fragment>\r\n                    <tr >\r\n                        <td >1.</td>  \r\n                        <td dangerouslySetInnerHTML={{__html: props.description}} />  \r\n                        <td>\r\n                                <Link to= {{ pathname: `/privacy/edit/${props._id}` }}  >\r\n\r\n                                    <button type=\"button\"   className=\"btn btn-primary\" id=\"modalprintedit\"\r\n                                    data-toggle=\"modal\" style={{'marginRight':'10px'}} data-target=\"#modal-form-Edit\"\r\n                                    title=\"Edit\">\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                    </button>\r\n                                </Link>\r\n                        </td>\r\n                    </tr>\r\n   \r\n                </Fragment>                 \r\n            )\r\n    }\r\n    export default connect(null, { })(Privacy)\r\n\r\n//export default Privacy","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Prompt, Link, useHistory } from 'react-router-dom'\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { fetchPrivacy } from '../../actions/privacy'\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport Privacy  from './Privacy'\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nconst PrivacyList = props => {\r\n    console.log(props)\r\n    useEffect( ()=>(\r\n        props.fetchPrivacy()\r\n    ), [])\r\n    let history = useHistory()\r\n    let handlePageChange = (pageNumber) => {\r\n        console.log(`active page is ${pageNumber}  `);\r\n        props.fetchPrivacy(undefined, pageNumber ,3)\r\n    }\r\n\r\n    let handlePageSearch = (e) => {\r\n        console.log(`search name is ${e.target.value}  `);\r\n        props.fetchPrivacy(undefined, undefined ,undefined,e.target.value)\r\n    }\r\n\r\n    let handleClear = () => {\r\n        console.log(`clear`);\r\n        document.getElementById('searchinput').value=''\r\n        props.fetchPrivacy(undefined, undefined ,undefined,'')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <Header />\r\n            <Menu />\r\n           <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n                <section className=\"content-header\">\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h5 className=\"box-title\">Privacy Management</h5>\r\n                                   \r\n                                </div>\r\n\r\n                                <div className=\"search-box\">\r\n            \r\n                                         \r\n\r\n                                </div>\r\n\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered  table-condensed table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style= {{ textAlign: 'center' }}>SNo.</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Description</th>\r\n                                                    <th style= {{ textAlign: 'center' }}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {(function() {\r\n                                                \r\n                                                     if (props.isloading) {\r\n                                                        return (\r\n                                                            <Loader fullPage loading />\r\n\r\n                                                        )\r\n                                                     }else \r\n                                                    if (props.privacylist.success !== false && props.privacylist.STATUSCODE !== 4000) {\r\n\r\n                                                        return props.privacylist.response.docs\r\n                                                        .map( privacylist => <Privacy key={privacylist._id} {...privacylist}/> );\r\n\r\n                                                    } else if (props.privacylist.success === false && props.privacylist.STATUSCODE === 4000){\r\n                                                        if (props.login && props.login.success !== false)\r\n                                                        {\r\n                                                            return  history.push('/privacy')\r\n\r\n                                                        }\r\n                                                        return  history.push('/login')\r\n                                                    }\r\n                                                    })\r\n                                             ()}\r\n\r\n                                           </tbody>\r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"pagination-center\">\r\n                            { \r\n                                props.privacylist.success !== false && \r\n                                <Pagination\r\n                                            activePage={props.privacylist.response.page}\r\n                                            itemsCountPerPage={props.privacylist.response.limit}\r\n                                            totalItemsCount={props.privacylist.response.total}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                />\r\n      \r\n                            }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer />\r\n   \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({privacyReducer}) => ({\r\n\r\n    privacylist:privacyReducer.privacylist,\r\n    isloading:privacyReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchPrivacy})(PrivacyList)","\r\nimport React, { Component, Fragment, useEffect, useState,useRef } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as Yup from 'yup'\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {  fetchPrivacy, postEditPrivacy } from '../../actions/privacy'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { Loader } from 'react-overlay-loader';\r\nimport 'react-overlay-loader/styles.css';\r\nimport './PrivacyForm.css'\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n    return ref.current;\r\n  }\r\n\r\nconst PrivacyForm = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n   var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n   console.log('lastIndex----',lastIndex);\r\n   \r\n   var id = window.location.href.substring(lastIndex + 1); //after this id=\"true\"\r\n   console.log('path----',id);\r\n\r\n    useEffect( ()=>(\r\n        props.fetchPrivacy(id)\r\n    ), [])\r\n    console.log('props values--->',props);\r\n\r\n    var lastIndex = window.location.href.lastIndexOf(\"/\")\r\n    console.log('lastIndex----',lastIndex);\r\n\r\n    let pathEditView = window.location.href.split('/')[ window.location.href.split('/').length -2]\r\n    console.log('pathEditView--------->',pathEditView);\r\n\r\n    const isAddMode = id=='add' ? true:false;\r\n\r\n    const prevIsSuccess = usePrevious(props.isSuccess);    \r\n\r\n    useEffect( ()=>{\r\n        console.log('isSuccess hitted',props.isSuccess);\r\n\r\n        if(prevIsSuccess === false && props.isSuccess === true)\r\n        {\r\n   \r\n                toast.success(\"Privacy Updated Successfully.\")\r\n\r\n                setTimeout( ()=>{\r\n    \r\n                    history.goBack() \r\n        \r\n                },2000)\r\n\r\n           \r\n        }\r\n\r\n    }, [props.isSuccess,prevIsSuccess])\r\n\r\n\r\n\r\n    let definedid = ''\r\n    let defineddescription = ''\r\n    let defineddeleteId = ''\r\n    //deleteId\r\n    if(props.privacylist.response.docs.length == 1)\r\n    {\r\n        defineddeleteId = pathEditView == 'delete' ? props.privacylist.response.docs[0]._id: ''\r\n        definedid = props.privacylist.response.docs[0]._id\r\n\r\n        defineddescription = props.privacylist.response.docs[0].description\r\n\r\n    }\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n    if(isAddMode)\r\n    {\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n\r\n    }else{\r\n\r\n        addEditFields ={\r\n            deleteId: defineddeleteId,\r\n            privacyId: definedid,\r\n            description:defineddescription\r\n        }\r\n\r\n        valdationShape= {\r\n\r\n            description: Yup.string()\r\n                .required('Description is required')\r\n        }\r\n    }\r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n\r\n        if (isAddMode) {\r\n\r\n            props.postAddPrivacy(fields)\r\n\r\n        } else {\r\n\r\n            props.postEditPrivacy(fields)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <div className=\"content-wrapper\" style={{minHeight:'576px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n            {props.isloading &&\r\n\r\n                <Loader fullPage loading />\r\n\r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n            { pathEditView == 'edit' && props.privacylist.success !== false && props.privacylist.response.docs.length == 1  && \r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>{isAddMode ? 'Add Privacy' : 'Edit Privacy'}</h1>\r\n                        \r\n\r\n                        <FormGroup row>\r\n                        <Label for=\"description\" md={3}>Description</Label>\r\n                        <Col md={9}>\r\n\r\n                            <CKEditor\r\n                                editor={ ClassicEditor }\r\n                                data={values.description}\r\n                                disabled={false}\r\n                                onInit={ editor => {\r\n                                    // You can store the \"editor\" and use when it is needed.\r\n                                    console.log( 'Editor is ready to use!', editor );\r\n                                } }\r\n                                onChange={ ( event, editor ) => {\r\n                                    const data = editor.getData();\r\n                                    setFieldValue(`description`, data)\r\n                                    console.log( { event, editor, data } );\r\n                                } }\r\n                                onBlur={ ( event, editor ) => {\r\n                                    console.log( 'Blur.', editor );\r\n                                } }\r\n                                onFocus={ ( event, editor ) => {\r\n                                    console.log( 'Focus.', editor );\r\n                                } }\r\n                            />\r\n\r\n                            <ErrorMessage name=\"description\" component=\"div\" className=\"invalid-feedback\" />\r\n                        \r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                        <Col md={9}>\r\n\r\n                            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\r\n                                {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                Save\r\n                            </button>\r\n                            <Link to={isAddMode ? '.' : '..'} className=\"btn btn-link\">Cancel</Link>\r\n\r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            }\r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n        </Row>\r\n        </div>\r\n        <Footer />\r\n        </div>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({privacyReducer}) => ({\r\n    privacylist:privacyReducer.privacylist,\r\n    isSuccess:privacyReducer.isSuccess,\r\n    isloading:privacyReducer.isloading\r\n})\r\n\r\nexport default connect(mapStateToProps, {postEditPrivacy, fetchPrivacy })(PrivacyForm)\r\n","\r\nimport React, { Component, Fragment, useEffect, useState } from 'react'\r\nimport { runInThisContext } from 'vm';\r\nimport { withFormik, Form, Field, Formik, ErrorMessage } from 'formik'\r\nimport { FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { Container, Row, Col, Media } from 'reactstrap';\r\nimport { Prompt, Link, useHistory  } from 'react-router-dom'\r\nimport { baseUrl, localUrl } from '../../shared/baseUrl'\r\n\r\nimport * as Yup from 'yup'\r\nimport { postChangePasswordAdmin } from '../../actions/admin'\r\nimport { connect } from 'react-redux';\r\nimport Header from '../header/Header'\r\nimport Menu from '../menu/Menu'\r\nimport Footer from '../footer/Footer'\r\nimport { log } from 'util';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nconst ChangePassword = props => {\r\n   // console.log('match values--->',match);\r\n   const history = useHistory()\r\n\r\n    console.log('props values--->',props);\r\n\r\n    //deleteId\r\n\r\n\r\n    let valdationShape = {}\r\n    let addEditFields = {}\r\n\r\n\r\n    addEditFields ={\r\n        newPassword: ''\r\n    }\r\n\r\n    valdationShape= {\r\n\r\n        newPassword: Yup.string()\r\n            .required('New Password is required')\r\n    }\r\n    \r\n\r\n\r\n    const initialValues = addEditFields\r\n\r\n    const validationSchema = Yup.object().shape(valdationShape);\r\n\r\n    function onSubmit(fields) {\r\n\r\n        console.log('fields---',fields);\r\n        \r\n       props.postChangePasswordAdmin(fields)\r\n\r\n       toast(\"Password Changed Successfully.\")\r\n        setTimeout( ()=>{\r\n\r\n            history.push('/dashboard') \r\n\r\n        },2500)\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        <ToastContainer />\r\n        <Header />\r\n        <Menu />\r\n        <Container fluid={true} className=\"page\" style={{marginLeft: '313px'}}>\r\n          <Row>\r\n            <Col xs=\"12\" md={{size:10, offset:0}}></Col>\r\n\r\n\r\n\r\n            {/*   THIS PART FOR EDIT  START   */}\r\n\r\n              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit }>\r\n                {({ values, errors, touched, isSubmitting, setFieldValue }) => {\r\n\r\n                return (\r\n                    <Form>\r\n\r\n                        <h1>Change Password</h1>\r\n\r\n\r\n                        <FormGroup row>\r\n                        <Label for=\"newPassword\" md={3}>New Password </Label>\r\n                        <Col md={9}>\r\n\r\n                                <Field name=\"newPassword\" type=\"text\" className={'form-control' + (errors.newPassword && touched.newPassword ? ' is-invalid' : '')} />\r\n                               \r\n                                <ErrorMessage name=\"newPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                       \r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                        <Col md={9}>\r\n\r\n                            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\r\n                                {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                                Save\r\n                            </button>\r\n                            <Link to={'..'} className=\"btn btn-link\">Cancel</Link>\r\n                            \r\n\r\n                        </Col>\r\n                        </FormGroup>\r\n\r\n                        \r\n                    </Form>\r\n                );\r\n                }}\r\n              </Formik>\r\n            \r\n            \r\n\r\n            {/*   THIS PART FOR EDIT  END   */}\r\n\r\n\r\n\r\n        </Row>\r\n        </Container>\r\n    </Fragment>\r\n    );    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = ({adminReducer}) => ({\r\n\r\n    changepassword:adminReducer.changepassword\r\n})\r\n\r\nexport default connect(mapStateToProps, { postChangePasswordAdmin })(ChangePassword)\r\n","import React, {Fragment} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LoginForm from './components/login/LoginForm'\nimport AdminList from './components/admin/AdminList'\nimport AdminForm from './components/admin/AdminForm'\nimport UserList from './components/users/UserList'\nimport UserForm from './components/users/UserForm'\n\nimport TermList from './components/terms/TermList'\nimport TermForm from './components/terms/TermForm'\n\nimport PrivacyList from './components/privacy/PrivacyList'\nimport PrivacyForm from './components/privacy/PrivacyForm'\n\nimport ChangePassword from './components/admin/ChangePassword'\n\nimport Dashboard from './components/dashboard/Dashboard'\n\nimport Header from './components/header/Header'\nimport Menu from './components/menu/Menu'\nimport Footer from './components/footer/Footer'\n\nimport { getToken } from './actions/admin'\nimport { Switch, Redirect,  Route } from 'react-router-dom';\n\n\n\n\nfunction SecuredPath(props){\n\n      const authentication ={\n            isAuthenticated : getToken() !== null ? JSON.parse(getToken()).isAuthenticated: false\n      }\n      \n      console.log('JSON.parse(getToken())---',JSON.parse(getToken()))\n\n      console.log('authentication.isAuthenticated--',authentication.isAuthenticated)\n\n      return (\n            <Route path={props.path} render = { data => \n                  authentication.isAuthenticated ? \n                  (\n                        <props.component {...data}>\n                              \n                        </props.component>\n                  )\n                  :\n                  (\n                        <Redirect to=\"/login\"  />\n                  )\n                  }>\n\n            </Route>\n      )\n}\n\n\nfunction App() {\n                  console.log('getToken----',getToken());\n                  console.log('window.location.href----',window.location.href);\n                  var lastIndex = window.location.href.lastIndexOf(\"/\")\n\n                  var urlPath = window.location.href.substring(lastIndex + 1); //after this urlPath=\"true\"\n                  console.log('path----',urlPath);\n\n                  let isAuthenticated = getToken() !== null ? JSON.parse(getToken()).isAuthenticated: false\n                  return (\n                              \n                              <div className=\"App\">\n\n                                    <Switch>\n                                          {/* <Route exact path=\"/\" render={ () => {\n                                                      return (\n                                                            isAuthenticated === false ?\n                                                            <Redirect to=\"/login\" /> :\n                                                            <Redirect to=\"/dashboard\" /> \n                                                      )\n                                                }}\n                                          /> */}\n                                          <SecuredPath path=\"/dashboard\" exact component={() => { return <Dashboard />}} />\n                                          <Route path=\"/\" exact component={() => { return <LoginForm />}} /> \n                                          <Route path=\"/login\" exact component={() => { return <LoginForm />}} /> \n                                          \n                                          <SecuredPath path=\"/admin\" exact component={() => { return <AdminList />}} /> \n                                          <SecuredPath path='/admin/view/:id' exact component={AdminForm} />    \n                                          <SecuredPath path='/admin/edit/:id' exact component={AdminForm} />    \n                                          <SecuredPath path='/admin/add' exact component={AdminForm} />    \n                                          <SecuredPath path=\"/admin/delete/:id\" exact component={AdminForm} />\n\n                                          <SecuredPath path=\"/changepassword\" exact component={() => { return <ChangePassword />}} /> \n\n                                          \n                                          \n                                          <SecuredPath path=\"/user\" exact component={() => { return <UserList />}} /> \n                                          <SecuredPath path='/user/view/:id' component={UserForm} />    \n                                          <SecuredPath path='/user/edit/:id' component={UserForm} />    \n                                          <SecuredPath path='/user/add' component={UserForm} />    \n                                          <SecuredPath path=\"/user/delete/:id\" component={UserForm} />\n\n                                          <SecuredPath path=\"/term/\" exact component={() => { return <TermList />}} /> \n                                          <SecuredPath path=\"/term/edit/:id\" exact component={() => { return <TermForm />}} /> \n                                            \n                                          <SecuredPath path=\"/privacy/\" exact component={() => { return <PrivacyList />}} /> \n                                          <SecuredPath path=\"/privacy/edit/:id\" exact component={() => { return <PrivacyForm />}} /> \n                                            \n\n                                    </Switch>\n                                    <Footer />\n                              </div>\n                             \n                  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\n\r\nimport {\r\n    POST_ADMIN_LOGIN_START,\r\n    POST_ADMIN_LOGIN_SUCCESS,\r\n    POST_ADMIN_LOGIN_FAILURE,\r\n    POST_ADMIN_LOGINOUT_SUCCESS,  \r\n    \r\n    FETCH_ADMIN_LIST_START,\r\n    FETCH_ADMIN_LIST_SUCCESS,\r\n    FETCH_ADMIN_LIST_FAILURE,\r\n\r\n    POST_ADMIN_ADD_START,\r\n    POST_ADMIN_ADD_SUCCESS,\r\n    POST_ADMIN_ADD_FAILURE,\r\n\r\n    POST_ADMIN_EDIT_START,\r\n    POST_ADMIN_EDIT_SUCCESS,\r\n    POST_ADMIN_EDIT_FAILURE,\r\n\r\n    POST_ADMIN_CHANGEPASSWORD_START,\r\n    POST_ADMIN_CHANGEPASSWORD_SUCCESS,\r\n    POST_ADMIN_CHANGEPASSWORD_FAILURE,\r\n\r\n    POST_ADMIN_DELETE_START,\r\n    POST_ADMIN_DELETE_SUCCESS,\r\n    POST_ADMIN_DELETE_FAILURE,\r\n\r\n    FETCH_USER_LIST_START,\r\n    FETCH_USER_LIST_SUCCESS,\r\n    FETCH_USER_LIST_FAILURE,\r\n\r\n    POST_USER_ADD_START,\r\n    POST_USER_ADD_SUCCESS,\r\n    POST_USER_ADD_FAILURE,    \r\n\r\n    POST_USER_EDIT_START,\r\n    POST_USER_EDIT_SUCCESS,\r\n    POST_USER_EDIT_FAILURE,\r\n\r\n    POST_SEND_EMAIL_START,\r\n    POST_SEND_EMAIL_SUCCESS,\r\n    POST_SEND_EMAIL_FAILURE,\r\n\r\n    POST_USER_DELETE_START,\r\n    POST_USER_DELETE_SUCCESS,\r\n    POST_USER_DELETE_FAILURE\r\n\r\n} from  '../actions/admin'\r\n\r\n//postSendEmail\r\nconst initialState = {\r\n        list            : { success: false , STATUSCODE:2000, error: false , response : {docs:[]}},\r\n        userList        : { success: false ,STATUSCODE:2000, error: false , response : {docs:[]}},\r\n        login           : { success: false ,STATUSCODE:2000, error: false , response : {}},\r\n        sendEmail       : { success: false ,STATUSCODE:2000, error: false , response : {}},\r\n        changepassword  : { success: false ,STATUSCODE:2000, error: false , response : {}},\r\n        ismailsend      : false,\r\n        message         : 'Welcome To Calaf Admin',\r\n        isloading       : false,\r\n        isSuccess       : false\r\n}\r\n\r\nexport default( state=initialState, action) =>{\r\n\r\n    const newState = {...state}\r\n\r\n    switch(action.type){\r\n\r\n        case POST_ADMIN_LOGIN_START:\r\n        return {\r\n            ...state,\r\n            isloading:true\r\n        };\r\n        case POST_ADMIN_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                login:action.payload\r\n            };\r\n        case POST_ADMIN_LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };  \r\n        case POST_ADMIN_LOGINOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                login:action.payload\r\n            };    \r\n                    \r\n        case FETCH_ADMIN_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_ADMIN_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                list:action.payload,\r\n                isSuccess   : action.payload.success,\r\n            };\r\n        case FETCH_ADMIN_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n        case POST_ADMIN_CHANGEPASSWORD_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case POST_ADMIN_CHANGEPASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                changepassword:action.payload\r\n            };\r\n        case POST_ADMIN_CHANGEPASSWORD_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n\r\n        case POST_ADMIN_ADD_START:\r\n            return {\r\n                ...state,\r\n                isloading:true,\r\n                isSuccess:false,\r\n\r\n            };\r\n        case POST_ADMIN_ADD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                isSuccess   : action.payload.success,\r\n                message     : action.payload.message\r\n            };\r\n        case POST_ADMIN_ADD_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                isSuccess:false,\r\n                message     : action.payload\r\n\r\n            }; \r\n\r\n        case POST_ADMIN_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isloading:true,\r\n                isSuccess:false,\r\n                message     : null\r\n\r\n            };\r\n        case POST_ADMIN_EDIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                isSuccess   : action.payload.success,\r\n                message     : action.payload.message\r\n            };\r\n        case POST_ADMIN_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                isSuccess:false,\r\n                message : action.payload\r\n\r\n            };             \r\n\r\n        case POST_ADMIN_DELETE_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case POST_ADMIN_DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n            };\r\n        case POST_ADMIN_DELETE_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            }; \r\n\r\n        case FETCH_USER_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_USER_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                userList:action.payload,\r\n                isSuccess   : action.payload.success,\r\n            };\r\n        case FETCH_USER_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n        case POST_USER_ADD_START:\r\n            return {\r\n                ...state,\r\n                isloading   : true,\r\n                isSuccess   : false,\r\n            };\r\n        case POST_USER_ADD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading   : false,\r\n                isSuccess   : action.payload.success,\r\n                message     : action.payload.message\r\n            };\r\n        case POST_USER_ADD_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading   : false,\r\n                isSuccess   : false,\r\n                message     : action.payload\r\n\r\n            };  \r\n\r\n        case POST_USER_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isloading   : true,\r\n                isSuccess   : false,\r\n                message     : null\r\n\r\n            };\r\n        case POST_USER_EDIT_SUCCESS:\r\n        console.log('action.payload---->',action.payload);\r\n        \r\n            return {\r\n                ...state,\r\n                isloading   : false,\r\n                isSuccess   : action.payload.success,\r\n                message     : action.payload.message\r\n            };\r\n        case POST_USER_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading   : false,\r\n                isSuccess   : false,\r\n                message     : action.payload\r\n\r\n            };             \r\n\r\n\r\n        case POST_SEND_EMAIL_START:\r\n            return {\r\n                ...state,\r\n                isloading   : true,\r\n                ismailsend   : false,\r\n                sendmailmessage     : null\r\n\r\n            };\r\n        case POST_SEND_EMAIL_SUCCESS:\r\n        console.log('action.payload---->',action.payload);\r\n        \r\n            return {\r\n                ...state,\r\n                isloading       : false,\r\n                ismailsend      : true,\r\n                isloading       : false,\r\n                sendmailmessage : action.payload.message\r\n            };\r\n        case POST_SEND_EMAIL_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading        : false,\r\n                ismailsend       : false,\r\n                sendmailmessage  : action.payload\r\n            }; \r\n\r\n\r\n        case POST_USER_DELETE_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case POST_USER_DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n            };\r\n        case POST_USER_DELETE_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };             \r\n\r\n        default :\r\n            return state\r\n    }\r\n    //console.log(newState);\r\n    \r\n    \r\n}\r\n\r\n//export default reducer","\r\n\r\nimport {\r\n    \r\n    FETCH_PRIVACY_LIST_START,\r\n    FETCH_PRIVACY_LIST_SUCCESS,\r\n    FETCH_PRIVACY_LIST_FAILURE,\r\n\r\n    POST_PRIVACY_EDIT_START,\r\n    POST_PRIVACY_EDIT_SUCCESS,\r\n    POST_PRIVACY_EDIT_FAILURE,\r\n\r\n\r\n} from  '../actions/privacy'\r\n\r\n\r\nconst initialState = {\r\n    privacylist:{ success: false ,STATUSCODE:2000, error: false , response : {docs:[]}},\r\n    isSuccess:false,\r\n    isloading:false\r\n}\r\n\r\nexport default( state=initialState, action) =>{\r\n\r\n    const newState = {...state}\r\n\r\n    switch(action.type){\r\n        \r\n        case FETCH_PRIVACY_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_PRIVACY_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                privacylist:action.payload\r\n            };\r\n        case FETCH_PRIVACY_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n\r\n        case POST_PRIVACY_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:true\r\n            };\r\n        case POST_PRIVACY_EDIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isSuccess:true,\r\n                isloading:false,\r\n            };\r\n        case POST_PRIVACY_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:false\r\n            };                      \r\n\r\n        default :\r\n            return state\r\n    }\r\n    //console.log(newState);\r\n    \r\n    \r\n}\r\n","\r\n\r\nimport {\r\n    \r\n    FETCH_TERM_LIST_START,\r\n    FETCH_TERM_LIST_SUCCESS,\r\n    FETCH_TERM_LIST_FAILURE,\r\n\r\n    POST_TERM_EDIT_START,\r\n    POST_TERM_EDIT_SUCCESS,\r\n    POST_TERM_EDIT_FAILURE,\r\n\r\n\r\n} from  '../actions/terms'\r\n\r\n\r\nconst initialState = {\r\n    termlist:{ success: false ,STATUSCODE:2000, error: false , response : {docs:[]}},\r\n    isSuccess:false,\r\n    isloading:false\r\n}\r\n\r\nexport default( state=initialState, action) =>{\r\n\r\n    const newState = {...state}\r\n\r\n    switch(action.type){\r\n        \r\n        case FETCH_TERM_LIST_START:\r\n            return {\r\n                ...state,\r\n                isloading:true\r\n            };\r\n        case FETCH_TERM_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isloading:false,\r\n                termlist:action.payload\r\n            };\r\n        case FETCH_TERM_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isloading:false\r\n            };\r\n\r\n        case POST_TERM_EDIT_START:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:true\r\n            };\r\n        case POST_TERM_EDIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isSuccess:true,\r\n                isloading:false,\r\n            };\r\n        case POST_TERM_EDIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isSuccess:false,\r\n                isloading:false\r\n            };                      \r\n\r\n        default :\r\n            return state\r\n    }\r\n    //console.log(newState);\r\n    \r\n    \r\n}\r\n","\r\nimport { combineReducers } from 'redux'\r\n\r\nimport adminReducer from './adminReducer'\r\nimport privacyReducer from './privacyReducer'\r\nimport termReducer from './termReducer'\r\n\r\n\r\nexport default combineReducers ({\r\n\r\n        adminReducer,\r\n        privacyReducer,\r\n        termReducer\r\n\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer  from './reducers'\r\n\r\n// for multi middleware take them in array applyMiddleware( [thunk1, thunk2] )\r\nexport default createStore(rootReducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux'\n\nimport store from './store' \n\nconst AppWithProvider = (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n)\n\nReactDOM.render(AppWithProvider,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}